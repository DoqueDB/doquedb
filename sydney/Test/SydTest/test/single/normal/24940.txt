# Bug report 1761

Begin;
Initialize;
InitializeSession  "TESTDB";
Command "create database TESTDB";
TerminateSession;
InitializeSession  "TESTDB";
Command "create table T(f1_int_unique int, f2_int_btree int, f3_int int, f4_bigint_unique bigint, f5_bigint_btree bigint, f6_bigint bigint, f7_float_unique float, f8_float_btree float, f9_float float, f10_decimal_btree decimal(15,5), f11_decimal_unique decimal(15,5), f12_decimal decimal(15,5), f13_decimal_unique decimal(10,0), f14_decimal_btree decimal(10,0), f15_decimal decimal(10,0), f16_char_unique varchar(10), f17_char_btree varchar(10), f18_char varchar(10), f19_nchar nvarchar(10), f20_nchar_unique nvarchar(10), f21_nchar_btree nvarchar(10), f22_bigint_unique bigint)";
Command "create unique index I_T_f1_int_unique on T(f1_int_unique)";
Command "create unique index I_T_f4_bigint_unique on T(f4_bigint_unique)";
Command "create unique index I_T_f7_float_unique on T(f7_float_unique)";
Command "create unique index I_T_f11_decimal_unique on T(f11_decimal_unique)";
Command "create unique index I_T_f13_decimal_unique on T(f13_decimal_unique)";
Command "create unique index I_T_f16_char_unique on T(f16_char_unique)";
Command "create unique index I_T_f20_nchar_unique on T(f20_nchar_unique)";
Command "create unique index I_T_f22_bigint_unique on T(f22_bigint_unique)";
Command "create  index I_T_f2_int_btree on T(f2_int_btree)";
Command "create  index I_T_f5_bigint_btree on T(f5_bigint_btree)";
Command "create  index I_T_f8_float_btree on T(f8_float_btree)";
Command "create  index I_T_f10_decimal_btree on T(f10_decimal_btree)";
Command "create  index I_T_f14_decimal_btree on T(f14_decimal_btree)";
Command "create  index I_T_f17_char_btree on T(f17_char_btree)";
Command "create  index I_T_f21_nchar_btree on T(f21_nchar_btree)";
Command "insert T values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?),(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?),(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?),(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?),(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?),(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?),(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?),(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?),(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?),(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)" [-2147483647,null,null,"-9223372036854775808","-9223372036854775808","9223372036854775807",null,"-1.79769313486231E308","2.22507385850721E-308",null,"1",null,"-99999.99999",null,"-1",null,null," The schema describes the objects that are represented in the database, and the relationships among them.",null,"9単純なファイルシステムには、ファイルシステム自体に「データ」を統一的手法で操作する機能はない。ファイルシステムでデータ管理をするためには、データの操作機能を「応用プログラム側」に持つしかない。データベースは、それを自ら持つことにより、応用プログラム側でデータの物理的格納状態を知らずとも操作でき、かつ、データの物理的格納状態に変更があった場合にも応用プログラム側の処理に影響が及ばないことを保障することがデータベースの前提条件となっている。(プログラムとデータの独立性)","コンピュータ上では、データの再利用を高速かつ安定に実現するため、データを格納するための構造について様々な工夫が払われており、このデータ構造とアルゴリズムは情報工学において重要な研究分野のひとつである。",null,2,2147483647,null,null,"0","-9223372036854775808",null,"2.22507385850721E-308",null,null,"-2","1",null,null,"987654.3210987654321",null," A great deal of the internal engineering of a DBMS, however, is independent of the data model, and is concerned with managing factors such as performance, concurrency, integrity, and recovery from hardware failures."," There are a number of different ways of organizing a schema, that is, of modelling the database structure: these are known as database models (or data models).",null,"0コンピュータ上では、データの再利用を高速かつ安定に実現するため、データを格納するための構造について様々な工夫が払われており、このデータ構造とアルゴリズムは情報工学において重要な研究分野のひとつである。",null,null,-3,null,null,"1","1","0",null,"-2.22507385850721E-308","-2.22507385850721E-308",null,"99998.99998",null,"1",null,"0.01234567890123456789",null,null," The model in most common use today is the relational model, which in layman's terms represents all information in the form of multiple related tables each consisting of rows and columns (the true definition uses mathematical terminology).",null,"1単純なファイルシステムには、ファイルシステム自体に「データ」を統一的手法で操作する機能はない。ファイルシステムでデータ管理をするためには、データの操作機能を「応用プログラム側」に持つしかない。データベースは、それを自ら持つことにより、応用プログラム側でデータの物理的格納状態を知らずとも操作でき、かつ、データの物理的格納状態に変更があった場合にも応用プログラム側の処理に影響が及ばないことを保障することがデータベースの前提条件となっている。(プログラムとデータの独立性)","単純なファイルシステムには、ファイルシステム自体に「データ」を統一的手法で操作する機能はない。ファイルシステムでデータ管理をするためには、データの操作機能を「応用プログラム側」に持つしかない。データベースは、それを自ら持つことにより、応用プログラム側でデータの物理的格納状態を知らずとも操作でき、かつ、データの物理的格納状態に変更があった場合にも応用プログラム側の処理に影響が及ばないことを保障することがデータベースの前提条件となっている。(プログラムとデータの独立性)",null,0,-2147483648,null,null,"-1","1",null,"0","3.776E3",null,"-99998.99998","-1",null,null,"-987654.3210987654321",null," In these areas there are large differences between products'."," This model represents relationships by the use of values common to more than one table.",null,"2データベースをコンピュータ上で管理するためのシステム（Oracle Database、SQL Server、PostgreSQL、MySQL、SQLiteなど）をデータベースマネージメントシステム（DBMS）という。",null,null,-1,6543210,null,"0","876543210","-1",null,"3.141592",null,null,"2",null,"0",null,"-0.01234567890123456789",null,"Database From Wikipedia, the free encyclopedia The term or expression database originated within the computer industry."," Other models such as the hierarchical model and the network model use a more explicit representation of relationships.",null,"3データベース 出典: フリー百科事典『ウィキペディア（Wikipedia）』 データベース (Database) は、特定のテーマに沿ったデータを集めて管理し、容易に検索・抽出などの再利用をできるようにしたもの。 狭義には、コンピュータによって実現されたものを言う。OSが提供するファイルシステム上に直接構築されるものや、後述するデータベースマネージメントシステム (DBMS) を用いて構築されるものを含む。","データベースをコンピュータ上で管理するためのシステム（Oracle Database、SQL Server、PostgreSQL、MySQL、SQLiteなど）をデータベースマネージメントシステム（DBMS）という。",null,2147483647,null,null,null,"-5678901234567890","876543210",null,"3.776E3","0",null,"-3","0.01234567890123456789",null,null,"0",null,null,"The term database refers to the collection of related records, and the software should be referred to as the database management system or DBMS.",null,"4コンピュータ上では、データの再利用を高速かつ安定に実現するため、データを格納するための構造について様々な工夫が払われており、このデータ構造とアルゴリズムは情報工学において重要な研究分野のひとつである。","データベース 出典: フリー百科事典『ウィキペディア（Wikipedia）』 データベース (Database) は、特定のテーマに沿ったデータを集めて管理し、容易に検索・抽出などの再利用をできるようにしたもの。 狭義には、コンピュータによって実現されたものを言う。OSが提供するファイルシステム上に直接構築されるものや、後述するデータベースマネージメントシステム (DBMS) を用いて構築されるものを含む。",null,-2147483648,0,null,"-1","9223372036854775807","-5678901234567890",null,"1.79769313486231E308",null,null,"0",null,"-1",null,"1",null," Although its meaning has been broadened by popular use, even to include non-electronic databases, this article takes a more technical perspective towards the topic."," When the context is unambiguous, however, many database administrators and programmers use the term database to cover both meanings.",null,"5単純なファイルシステムには、ファイルシステム自体に「データ」を統一的手法で操作する機能はない。ファイルシステムでデータ管理をするためには、データの操作機能を「応用プログラム側」に持つしかない。データベースは、それを自ら持つことにより、応用プログラム側でデータの物理的格納状態を知らずとも操作でき、かつ、データの物理的格納状態に変更があった場合にも応用プログラム側の処理に影響が及ばないことを保障することがデータベースの前提条件となっている。(プログラムとデータの独立性)",null,null,1,null,null,null,"-9223372036854775808","9223372036854775807",null,"-1.79769313486231E308","3.141592",null,"-1","-987654.3210987654321",null,null,"-1",null,null,"Many professionals would consider a collection of data to constitute a database only if it has certain properties: for example, if the data is managed to ensure its integrity and quality, if it allows shared access by a community of users, if it has a schema, or if it supports a query language.",null,"6データベースをコンピュータ上で管理するためのシステム（Oracle Database、SQL Server、PostgreSQL、MySQL、SQLiteなど）をデータベースマネージメントシステム（DBMS）という。","コンピュータ上では、データの再利用を高速かつ安定に実現するため、データを格納するための構造について様々な工夫が払われており、このデータ構造とアルゴリズムは情報工学において重要な研究分野のひとつである。",null,-2,1,null,"9223372036854775807","0","-9223372036854775808",null,"2.22507385850721E-308",null,null,"99999.99999",null,"99999.99999",null,"987654.3210987654321",null," A possible definition is that a database is a structured collection of records or data which is stored in a computer so that a program can consult it to answer queries."," However, there is no agreed definition of these properties.",null,"7データベース 出典: フリー百科事典『ウィキペディア（Wikipedia）』 データベース (Database) は、特定のテーマに沿ったデータを集めて管理し、容易に検索・抽出などの再利用をできるようにしたもの。 狭義には、コンピュータによって実現されたものを言う。OSが提供するファイルシステム上に直接構築されるものや、後述するデータベースマネージメントシステム (DBMS) を用いて構築されるものを含む。",null,null,2147483646,null,null,null,"1","0",null,"-2.22507385850721E-308","1.79769313486231E308",null,"-99999.99999","-0.01234567890123456789",null,null,"0.01234567890123456789",null,null,"Database management systems are usually categorized according to the data model that they support: relational, object-relational, network, and so on.",null,"8コンピュータ上では、データの再利用を高速かつ安定に実現するため、データを格納するための構造について様々な工夫が払われており、このデータ構造とアルゴリズムは情報工学において重要な研究分野のひとつである。","単純なファイルシステムには、ファイルシステム自体に「データ」を統一的手法で操作する機能はない。ファイルシステムでデータ管理をするためには、データの操作機能を「応用プログラム側」に持つしかない。データベースは、それを自ら持つことにより、応用プログラム側でデータの物理的格納状態を知らずとも操作でき、かつ、データの物理的格納状態に変更があった場合にも応用プログラム側の処理に影響が及ばないことを保障することがデータベースの前提条件となっている。(プログラムとデータの独立性)",null];
TerminateSession;
InitializeSession  "TESTDB";
CreatePreparedCommand "sel1" "select count( *) from T";
PreparedCommand "sel1" [];
PreparedCommand "sel1" [];
ErasePreparedCommand "sel1";
CreatePreparedCommand "sel3" "select count(all T.f1_int_unique) from (select * from T order by f1_int_unique limit 10) as T where f2_int_btree > 0 group by (T.f2_int_btree)";
PreparedCommand "sel3" [];
PreparedCommand "sel3" [];
ErasePreparedCommand "sel3";
Command "select avg(distinct T.f1_int_unique) from T where f1_int_unique > 0 group by (T.f2_int_btree)";
Command "select count( T.f2_int_btree) from T inner join T as Tjoin using (f1_int_unique) group by (T.f2_int_btree)";
CreatePreparedCommand "sel6" "select avg( T.f2_int_btree) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0";
PreparedCommand "sel6" [];
PreparedCommand "sel6" [];
ErasePreparedCommand "sel6";
CreatePreparedCommand "sel7" "select sum(distinct T.f3_int) from T inner join T as Tjoin using (f1_int_unique) where T.f1_int_unique > 0 group by (T.f3_int)";
PreparedCommand "sel7" [];
PreparedCommand "sel7" [];
ErasePreparedCommand "sel7";
Command "select max(all T.f3_int) from T";
CreatePreparedCommand "sel9" "select sum( T.f4_bigint_unique) from T where f4_bigint_unique > 0 group by (T.f1_int_unique)";
PreparedCommand "sel9" [];
PreparedCommand "sel9" [];
ErasePreparedCommand "sel9";
Command "select max(distinct T.f4_bigint_unique) from (select * from T order by f1_int_unique limit 10) as T group by (T.f4_bigint_unique)";
Command "select sum(all T.f5_bigint_btree) from (select * from T order by f1_int_unique limit 10) as T group by (T.f1_int_unique)";
CreatePreparedCommand "sel12" "select max( T.f5_bigint_btree) from T inner join T as Tjoin using (f1_int_unique) where T.f5_bigint_btree > -700000000";
PreparedCommand "sel12" [];
PreparedCommand "sel12" [];
ErasePreparedCommand "sel12";
Command "select min(all T.f6_bigint) from T where f1_int_unique > 0 group by (T.f6_bigint)";
CreatePreparedCommand "sel14" "select min( T.f6_bigint) from (select * from T order by f1_int_unique limit 10) as T where f6_bigint > -700000000";
PreparedCommand "sel14" [];
PreparedCommand "sel14" [];
ErasePreparedCommand "sel14";
CreatePreparedCommand "sel15" "select min(distinct T.f7_float_unique) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
PreparedCommand "sel15" [];
PreparedCommand "sel15" [];
ErasePreparedCommand "sel15";
Command "select max(all T.f7_float_unique) from T where f1_int_unique > 0";
Command "select count( T.f8_float_btree) from T where f8_float_btree > -3000 group by (T.f8_float_btree)";
CreatePreparedCommand "sel18" "select avg(distinct T.f8_float_btree) from (select * from T order by f1_int_unique limit 10) as T";
PreparedCommand "sel18" [];
PreparedCommand "sel18" [];
ErasePreparedCommand "sel18";
Command "select sum(all T.f9_float) from T inner join T as Tjoin using (f1_int_unique) where T.f1_int_unique > 0";
CreatePreparedCommand "sel20" "select max( T.f9_float) from (select * from T order by f1_int_unique limit 10) as T where f9_float > -3000 group by (T.f1_int_unique)";
PreparedCommand "sel20" [];
PreparedCommand "sel20" [];
ErasePreparedCommand "sel20";
CreatePreparedCommand "sel21" "select min(all T.f10_decimal_btree) from (select * from T order by f1_int_unique limit 10) as T where f10_decimal_btree > -6543.2109 group by (T.f10_decimal_btree)";
PreparedCommand "sel21" [];
PreparedCommand "sel21" [];
ErasePreparedCommand "sel21";
Command "select count(distinct T.f10_decimal_btree) from T inner join T as Tjoin using (f1_int_unique) where T.f1_int_unique > 0 group by (T.f1_int_unique)";
Command "select min( T.f11_decimal_unique) from T group by (T.f1_int_unique)";
CreatePreparedCommand "sel24" "select count(all T.f11_decimal_unique) from (select * from T order by f1_int_unique limit 10) as T where f11_decimal_unique > 0";
PreparedCommand "sel24" [];
PreparedCommand "sel24" [];
ErasePreparedCommand "sel24";
CreatePreparedCommand "sel25" "select avg( T.f12_decimal) from T where f1_int_unique > 0 group by (T.f12_decimal)";
PreparedCommand "sel25" [];
PreparedCommand "sel25" [];
ErasePreparedCommand "sel25";
Command "select sum(distinct T.f12_decimal) from (select * from T order by f1_int_unique limit 10) as T where f12_decimal > 0";
Command "select avg(all T.f13_decimal_unique) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
CreatePreparedCommand "sel28" "select sum( T.f13_decimal_unique) from T where f1_int_unique > 0 group by (T.f13_decimal_unique)";
PreparedCommand "sel28" [];
PreparedCommand "sel28" [];
ErasePreparedCommand "sel28";
CreatePreparedCommand "sel29" "select max(distinct T.f14_decimal_btree) from T inner join T as Tjoin using (f1_int_unique) where T.f1_int_unique > 0 group by (T.f1_int_unique)";
PreparedCommand "sel29" [];
PreparedCommand "sel29" [];
ErasePreparedCommand "sel29";
Command "select min( T.f14_decimal_btree) from (select * from T order by f1_int_unique limit 10) as T";
Command "select min(distinct T.f15_decimal) from T inner join T as Tjoin using (f1_int_unique) where T.f1_int_unique > 0";
CreatePreparedCommand "sel32" "select sum( T.f15_decimal) from (select * from T order by f1_int_unique limit 10) as T group by (T.f15_decimal)";
PreparedCommand "sel32" [];
PreparedCommand "sel32" [];
ErasePreparedCommand "sel32";
CreatePreparedCommand "sel33" "select max(distinct T.f16_char_unique) from T where f16_char_unique like '0Although%' group by (T.f16_char_unique)";
PreparedCommand "sel33" [];
PreparedCommand "sel33" [];
ErasePreparedCommand "sel33";
Command "select count( T.f16_char_unique) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
CreatePreparedCommand "sel35" "select count(all T.f17_char_btree) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0 group by (T.f17_char_btree)";
PreparedCommand "sel35" [];
PreparedCommand "sel35" [];
ErasePreparedCommand "sel35";
Command "select max(distinct T.f17_char_btree) from T inner join T as Tjoin using (f1_int_unique) where T.f17_char_btree like 'Although%'";
CreatePreparedCommand "sel37" "select max(all T.f18_char) from T group by (T.f1_int_unique)";
PreparedCommand "sel37" [];
PreparedCommand "sel37" [];
ErasePreparedCommand "sel37";
Command "select max(distinct T.f18_char) from T inner join T as Tjoin using (f1_int_unique) where T.f18_char like 'Although%'";
Command "select max(all T.f19_nchar) from T inner join T as Tjoin using (f1_int_unique) group by (T.f19_nchar)";
CreatePreparedCommand "sel40" "select min(distinct T.f19_nchar) from T where f1_int_unique > 0 group by (T.f1_int_unique)";
PreparedCommand "sel40" [];
PreparedCommand "sel40" [];
ErasePreparedCommand "sel40";
Command "select count(distinct T.f20_nchar_unique) from T where f20_nchar_unique like '0ファイル%'";
CreatePreparedCommand "sel42" "select max( T.f20_nchar_unique) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0 group by (T.f20_nchar_unique)";
PreparedCommand "sel42" [];
PreparedCommand "sel42" [];
ErasePreparedCommand "sel42";
CreatePreparedCommand "sel43" "select max(all T.f21_nchar_btree) from T group by (T.f1_int_unique)";
PreparedCommand "sel43" [];
PreparedCommand "sel43" [];
ErasePreparedCommand "sel43";
Command "select max( T.f21_nchar_btree) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0";
CreatePreparedCommand "sel45" "select min(all T.f22_bigint_unique) from T inner join T as Tjoin using (f1_int_unique) where T.f22_bigint_unique > 0 group by (T.f22_bigint_unique)";
PreparedCommand "sel45" [];
PreparedCommand "sel45" [];
ErasePreparedCommand "sel45";
Command "select max(distinct T.f22_bigint_unique) from (select * from T order by f1_int_unique limit 10) as T group by (T.f1_int_unique)";
CreatePreparedCommand "sel48" "select max( T.f1_int_unique) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
PreparedCommand "sel48" [];
PreparedCommand "sel48" [];
ErasePreparedCommand "sel48";
Command "select min(distinct T.f2_int_btree) from T where f2_int_btree > 0 group by (T.f1_int_unique)";
Command "select count( T.f3_int) from (select * from T order by f1_int_unique limit 10) as T where f3_int > 0 group by (T.f1_int_unique)";
CreatePreparedCommand "sel51" "select count(all T.f4_bigint_unique) from T inner join T as Tjoin using (f1_int_unique) where T.f1_int_unique > 0";
PreparedCommand "sel51" [];
PreparedCommand "sel51" [];
ErasePreparedCommand "sel51";
Command "select avg(distinct T.f5_bigint_btree) from T where f1_int_unique > 0 group by (T.f5_bigint_btree)";
CreatePreparedCommand "sel53" "select count(distinct T.f6_bigint) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
PreparedCommand "sel53" [];
PreparedCommand "sel53" [];
ErasePreparedCommand "sel53";
Command "select avg( T.f7_float_unique) from (select * from T order by f1_int_unique limit 10) as T where f7_float_unique > 0 group by (T.f7_float_unique)";
CreatePreparedCommand "sel55" "select sum(all T.f8_float_btree) from T inner join T as Tjoin using (f1_int_unique) where T.f1_int_unique > 0 group by (T.f1_int_unique)";
PreparedCommand "sel55" [];
PreparedCommand "sel55" [];
ErasePreparedCommand "sel55";
CreatePreparedCommand "sel56" "select avg(distinct T.f9_float) from T group by (T.f9_float)";
PreparedCommand "sel56" [];
PreparedCommand "sel56" [];
ErasePreparedCommand "sel56";
CreatePreparedCommand "sel57" "select sum( T.f10_decimal_btree) from T";
PreparedCommand "sel57" [];
PreparedCommand "sel57" [];
ErasePreparedCommand "sel57";
Command "select max(distinct T.f11_decimal_unique) from T inner join T as Tjoin using (f1_int_unique) where T.f1_int_unique > 0 group by (T.f11_decimal_unique)";
CreatePreparedCommand "sel59" "select max(all T.f12_decimal) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
PreparedCommand "sel59" [];
PreparedCommand "sel59" [];
ErasePreparedCommand "sel59";
CreatePreparedCommand "sel60" "select min(distinct T.f13_decimal_unique) from (select * from T order by f1_int_unique limit 10) as T where f13_decimal_unique > 0";
PreparedCommand "sel60" [];
PreparedCommand "sel60" [];
ErasePreparedCommand "sel60";
Command "select sum(all T.f14_decimal_btree) from T where f14_decimal_btree > -6543.2109 group by (T.f14_decimal_btree)";
CreatePreparedCommand "sel62" "select avg(all T.f15_decimal) from T where f15_decimal > -6543.2109 group by (T.f1_int_unique)";
PreparedCommand "sel62" [];
PreparedCommand "sel62" [];
ErasePreparedCommand "sel62";
Command "select min(all T.f16_char_unique) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0";
Command "select min( T.f17_char_btree) from T group by (T.f1_int_unique)";
Command "select count( T.f18_char) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0 group by (T.f18_char)";
CreatePreparedCommand "sel66" "select max( T.f19_nchar) from (select * from T order by f1_int_unique limit 10) as T where f19_nchar like 'DBMS%'";
PreparedCommand "sel66" [];
PreparedCommand "sel66" [];
ErasePreparedCommand "sel66";
Command "select max(all T.f20_nchar_unique) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
CreatePreparedCommand "sel68" "select min(distinct T.f21_nchar_btree) from T inner join T as Tjoin using (f1_int_unique) where T.f21_nchar_btree like 'DBMS%' group by (T.f21_nchar_btree)";
PreparedCommand "sel68" [];
PreparedCommand "sel68" [];
ErasePreparedCommand "sel68";
CreatePreparedCommand "sel69" "select count( T.f22_bigint_unique) from T where f1_int_unique > 0";
PreparedCommand "sel69" [];
PreparedCommand "sel69" [];
ErasePreparedCommand "sel69";
Command "select sum(distinct T.f1_int_unique) from T inner join T as Tjoin using (f1_int_unique)";
CreatePreparedCommand "sel71" "select max(all T.f2_int_btree) from T where f2_int_btree > 0";
PreparedCommand "sel71" [];
PreparedCommand "sel71" [];
ErasePreparedCommand "sel71";
CreatePreparedCommand "sel73" "select avg(all T.f3_int) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0";
PreparedCommand "sel73" [];
PreparedCommand "sel73" [];
ErasePreparedCommand "sel73";
Command "select avg(distinct T.f4_bigint_unique) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0 group by (T.f4_bigint_unique)";
CreatePreparedCommand "sel75" "select count(distinct T.f5_bigint_btree) from T where f5_bigint_btree > -700000000";
PreparedCommand "sel75" [];
PreparedCommand "sel75" [];
ErasePreparedCommand "sel75";
Command "select avg( T.f6_bigint) from T where f6_bigint > -700000000 group by (T.f6_bigint)";
CreatePreparedCommand "sel77" "select sum(all T.f7_float_unique) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0 group by (T.f7_float_unique)";
PreparedCommand "sel77" [];
PreparedCommand "sel77" [];
ErasePreparedCommand "sel77";
Command "select max(all T.f8_float_btree) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0";
Command "select count(all T.f9_float) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
Command "select avg( T.f10_decimal_btree) from T inner join T as Tjoin using (f1_int_unique) where T.f10_decimal_btree > -6543.2109 group by (T.f1_int_unique)";
CreatePreparedCommand "sel81" "select sum(distinct T.f11_decimal_unique) from T inner join T as Tjoin using (f1_int_unique) where T.f11_decimal_unique > 0";
PreparedCommand "sel81" [];
PreparedCommand "sel81" [];
ErasePreparedCommand "sel81";
Command "select min(all T.f12_decimal) from T inner join T as Tjoin using (f1_int_unique) where T.f1_int_unique > 0 group by (T.f1_int_unique)";
Command "select max( T.f13_decimal_unique) from T where f13_decimal_unique > 0 group by (T.f13_decimal_unique)";
CreatePreparedCommand "sel84" "select avg(distinct T.f14_decimal_btree) from T inner join T as Tjoin using (f1_int_unique) where T.f14_decimal_btree > -6543.2109 group by (T.f14_decimal_btree)";
PreparedCommand "sel84" [];
PreparedCommand "sel84" [];
ErasePreparedCommand "sel84";
Command "select count(distinct T.f15_decimal) from (select * from T order by f1_int_unique limit 10) as T";
CreatePreparedCommand "sel86" "select max(all T.f16_char_unique) from T inner join T as Tjoin using (f1_int_unique) group by (T.f16_char_unique)";
PreparedCommand "sel86" [];
PreparedCommand "sel86" [];
ErasePreparedCommand "sel86";
CreatePreparedCommand "sel87" "select max( T.f17_char_btree) from T where f17_char_btree like 'Although%' group by (T.f17_char_btree)";
PreparedCommand "sel87" [];
PreparedCommand "sel87" [];
ErasePreparedCommand "sel87";
CreatePreparedCommand "sel88" "select max( T.f18_char) from T where f18_char like 'Although%' group by (T.f18_char)";
PreparedCommand "sel88" [];
PreparedCommand "sel88" [];
ErasePreparedCommand "sel88";
Command "select count(all T.f19_nchar) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
CreatePreparedCommand "sel90" "select max(distinct T.f20_nchar_unique) from T where f20_nchar_unique like '0ファイル%' group by (T.f1_int_unique)";
PreparedCommand "sel90" [];
PreparedCommand "sel90" [];
ErasePreparedCommand "sel90";
Command "select count( T.f21_nchar_btree) from T group by (T.f1_int_unique)";
Command "select sum( T.f22_bigint_unique) from (select * from T order by f1_int_unique limit 10) as T";
CreatePreparedCommand "sel94" "select min(all T.f1_int_unique) from (select * from T order by f1_int_unique limit 10) as T where f2_int_btree > 0";
PreparedCommand "sel94" [];
PreparedCommand "sel94" [];
ErasePreparedCommand "sel94";
CreatePreparedCommand "sel95" "select sum(distinct T.f2_int_btree) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
PreparedCommand "sel95" [];
PreparedCommand "sel95" [];
ErasePreparedCommand "sel95";
Command "select min( T.f3_int) from T group by (T.f3_int)";
CreatePreparedCommand "sel97" "select min(all T.f4_bigint_unique) from T inner join T as Tjoin using (f1_int_unique)";
PreparedCommand "sel97" [];
PreparedCommand "sel97" [];
ErasePreparedCommand "sel97";
CreatePreparedCommand "sel98" "select min(all T.f5_bigint_btree) from (select * from T order by f1_int_unique limit 10) as T group by (T.f1_int_unique)";
PreparedCommand "sel98" [];
PreparedCommand "sel98" [];
ErasePreparedCommand "sel98";
Command "select max(all T.f6_bigint) from (select * from T order by f1_int_unique limit 10) as T where f1_int_unique > 0";
CreatePreparedCommand "sel100" "select sum(distinct T.f6_bigint) from T inner join T as Tjoin using (f1_int_unique) group by (T.f1_int_unique)";
PreparedCommand "sel100" [];
PreparedCommand "sel100" [];
ErasePreparedCommand "sel100";
Command "select count(distinct T.f7_float_unique) from T group by (T.f1_int_unique)";
CreatePreparedCommand "sel102" "select min( T.f8_float_btree) from T group by (T.f8_float_btree)";
PreparedCommand "sel102" [];
PreparedCommand "sel102" [];
ErasePreparedCommand "sel102";
CreatePreparedCommand "sel103" "select min(distinct T.f9_float) from T where f9_float > -3000";
PreparedCommand "sel103" [];
PreparedCommand "sel103" [];
ErasePreparedCommand "sel103";
Command "select max(all T.f10_decimal_btree) from (select * from T order by f1_int_unique limit 10) as T group by (T.f10_decimal_btree)";
CreatePreparedCommand "sel105" "select avg(all T.f11_decimal_unique) from (select * from T order by f1_int_unique limit 10) as T group by (T.f11_decimal_unique)";
PreparedCommand "sel105" [];
PreparedCommand "sel105" [];
ErasePreparedCommand "sel105";
Command "select count( T.f12_decimal) from (select * from T order by f1_int_unique limit 10) as T group by (T.f12_decimal)";
Command "select count(all T.f13_decimal_unique) from (select * from T order by f1_int_unique limit 10) as T";
Command "select count(all T.f14_decimal_btree) from (select * from T order by f1_int_unique limit 10) as T";
Command "select max(all T.f15_decimal) from T inner join T as Tjoin using (f1_int_unique) where T.f1_int_unique > 0 group by (T.f15_decimal)";
CreatePreparedCommand "sel110" "select max( T.f16_char_unique) from (select * from T order by f1_int_unique limit 10) as T where f16_char_unique like '0Although%'";
PreparedCommand "sel110" [];
PreparedCommand "sel110" [];
ErasePreparedCommand "sel110";
Command "select max(all T.f17_char_btree) from (select * from T order by f1_int_unique limit 10) as T";
CreatePreparedCommand "sel112" "select min(all T.f18_char) from (select * from T order by f1_int_unique limit 10) as T";
PreparedCommand "sel112" [];
PreparedCommand "sel112" [];
ErasePreparedCommand "sel112";
CreatePreparedCommand "sel113" "select max(distinct T.f19_nchar) from (select * from T order by f1_int_unique limit 10) as T where f19_nchar like 'DBMS%' group by (T.f19_nchar)";
PreparedCommand "sel113" [];
PreparedCommand "sel113" [];
ErasePreparedCommand "sel113";
CreatePreparedCommand "sel114" "select min(all T.f20_nchar_unique) from (select * from T order by f1_int_unique limit 10) as T group by (T.f20_nchar_unique)";
PreparedCommand "sel114" [];
PreparedCommand "sel114" [];
ErasePreparedCommand "sel114";
CreatePreparedCommand "sel115" "select max(distinct T.f21_nchar_btree) from (select * from T order by f1_int_unique limit 10) as T where f21_nchar_btree like 'DBMS%' group by (T.f21_nchar_btree)";
PreparedCommand "sel115" [];
PreparedCommand "sel115" [];
ErasePreparedCommand "sel115";
CreatePreparedCommand "sel116" "select avg(distinct T.f22_bigint_unique) from T where f22_bigint_unique > 0 group by (T.f22_bigint_unique)";
PreparedCommand "sel116" [];
PreparedCommand "sel116" [];
ErasePreparedCommand "sel116";
TerminateSession;
InitializeSession  "TESTDB";
Command "drop database TESTDB";
TerminateSession;
Terminate;
End;
