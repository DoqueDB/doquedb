SydTest::Executor: [INFO] Main Start.
SydTest::Executor: [INFO] [Main] Initialize
SydTest::Executor: [INFO] [Main] InitializeSession
SydTest::Executor: [INFO] [SydTest Option] 
SydTest::Executor: [INFO] Session Initialize : 0
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop database TESTDB if exists
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create database TESTDB
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] TerminateSession
SydTest::Executor: [INFO] Session Terminate : 0
SydTest::Executor: [INFO] [Main] InitializeSession
SydTest::Executor: [INFO] [SydTest Option] TESTDB
SydTest::Executor: [INFO] Session Initialize : 0
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create table T(
	F_year int not null, 
	F_num int,
	F_text char(10),
	F_array varchar(32) array[no limit])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] CreateThread
SydTest::Executor: [INFO] [SydTest Option] InsertData
SydTest::Executor: [INFO] [Main] JoinThread
SydTest::Executor: [INFO] InsertData begin.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2001', 1, 'aaa', array['hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2002', 1, 'bbb', array['hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2002', 2, 'aaa', array['hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2003', 1, 'ccc', array['hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2003', 2, 'bbb', array['hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2003', 3, 'aaa', array['hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2004', 1, 'ddd', array['hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2004', 2, 'ccc', array['hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2004', 3, 'bbb', array['hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2004', 4, 'aaa', array['hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2005', 1, 'eee', array['hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2005', 2, 'ddd', array['hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2005', 3, 'ccc', array['hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2005', 4, 'bbb', array['hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2005', 5, 'aaa', array['hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2006', 1, 'fff', array['hoge6', 'hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2006', 2, 'eee', array['hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2006', 3, 'ddd', array['hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2006', 4, 'ccc', array['hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2006', 5, 'bbb', array['hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2006', 6, 'aaa', array['hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2007', 1, 'ggg', array['hoge7', 'hoge6', 'hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2007', 2, 'fff', array['hoge6', 'hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2007', 3, 'eee', array['hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2007', 4, 'ddd', array['hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2007', 5, 'ccc', array['hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2007', 6, 'bbb', array['hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2007', 7, 'aaa', array['hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2008', 1, 'hhh', array['hoge8', 'hoge7', 'hoge6', 'hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2008', 2, 'ggg', array['hoge7', 'hoge6', 'hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2008', 3, 'fff', array['hoge6', 'hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2008', 4, 'eee', array['hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2008', 5, 'ddd', array['hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2008', 6, 'ccc', array['hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2008', 7, 'bbb', array['hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2008', 8, 'aaa', array['hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2009', 1, 'iii', array['hoge9', 'hoge8', 'hoge7', 'hoge6', 'hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2009', 2, 'hhh', array['hoge8', 'hoge7', 'hoge6', 'hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2009', 3, 'ggg', array['hoge7', 'hoge6', 'hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2009', 4, 'fff', array['hoge6', 'hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2009', 5, 'eee', array['hoge5', 'hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2009', 6, 'ddd', array['hoge4', 'hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2009', 7, 'ccc', array['hoge3', 'hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2009', 8, 'bbb', array['hoge2', 'hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2009', 9, 'aaa', array['hoge1'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2010', 1, 'aaa', array['hoge10'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2010', null, 'aaa', array['hoge10'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2010', null, 'aaa', array['hoge10'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2010', 1, 'aaa', array['hoge10'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2010', 1, 'aaa', array['hoge10'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2010', 1, 'aaa', array['hoge10'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2010', 1, 'aaa', array[null])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2010', 1, 'aaa', array['hoge10', null])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2010', 1, 'aaa', null)
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [InsertData] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T (F_year, F_num, F_text, F_array) values ('2010', 1, null, array['hoge10'])
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] InsertData end.
SydTest::Executor: [INFO] [SydTest Option] InsertData
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T select * from T
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T select * from T
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] declare val bitmap
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T where F_num = 1 group by F_array[] order by count(*) desc
Executor: [ERR] (SydTest) Object No=xxx (XXX::XXX::XXX) Not supported.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T where rowid in val group by F_array[] order by count(*) desc
Executor: [ERR] (SydTest) Object No=xxx (XXX::XXX::XXX) Not supported.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where F_num = 1 AND F_text = 'aaa' group by F_array[]
Executor: [ERR] (SydTest) Object No=xxx (XXX::XXX::XXX) Not supported.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create bitmap index I1 on T(F_array)
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] start explain execute
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] CreateThread
SydTest::Executor: [INFO] [SydTest Option] TestGroupBy
SydTest::Executor: [INFO] [Main] JoinThread
SydTest::Executor: [INFO] TestGroupBy begin.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T group by F_array[]
SydTest::Executor: [INFO] {sequential scan on BMP_I1
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge1,180}
SydTest::Executor: [INFO] {hoge10,32}
SydTest::Executor: [INFO] {hoge2,144}
SydTest::Executor: [INFO] {hoge3,112}
SydTest::Executor: [INFO] {hoge4,84}
SydTest::Executor: [INFO] {hoge5,60}
SydTest::Executor: [INFO] {hoge6,40}
SydTest::Executor: [INFO] {hoge7,24}
SydTest::Executor: [INFO] {hoge8,12}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element()  from T group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(1 desc)
    <-- sequential scan on BMP_I1
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1}
SydTest::Executor: [INFO] {hoge2}
SydTest::Executor: [INFO] {hoge3}
SydTest::Executor: [INFO] {hoge4}
SydTest::Executor: [INFO] {hoge5}
SydTest::Executor: [INFO] {hoge6}
SydTest::Executor: [INFO] {hoge10}
SydTest::Executor: [INFO] {hoge7}
SydTest::Executor: [INFO] {hoge8}
SydTest::Executor: [INFO] {(null)}
SydTest::Executor: [INFO] {hoge9}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), max(F_num) from T group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(2 desc)
    <-- filter by grouping(0)
            aggregation: 
                   xx:max
                   xx:count
            <-- filter by BitsetDisintegration
                    <-- sequential scan on BMP_I1
                            execute:
                    execute:
                           xx:file fetch on VCT_T_$$Conversion
                           xx:file fetch on RCD_T
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,9}
SydTest::Executor: [INFO] {hoge2,8}
SydTest::Executor: [INFO] {hoge3,7}
SydTest::Executor: [INFO] {hoge4,6}
SydTest::Executor: [INFO] {hoge5,5}
SydTest::Executor: [INFO] {hoge6,4}
SydTest::Executor: [INFO] {hoge10,1}
SydTest::Executor: [INFO] {hoge7,3}
SydTest::Executor: [INFO] {hoge8,2}
SydTest::Executor: [INFO] {(null),1}
SydTest::Executor: [INFO] {hoge9,1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T where F_num = 1 group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(1 desc)
    <-- filter by grouping(1)
            aggregation: 
                   xx:count
            <-- filter by BitsetDisintegration
                    <-- sequential scan on BMP_I1
                            execute:
                    execute:
                           xx:file fetch on VCT_T_$$Conversion
                           xx:file fetch on RCD_T
                           xx:do until line xx unless check =
                           xx:continue
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,36}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] {hoge3,28}
SydTest::Executor: [INFO] {hoge10,24}
SydTest::Executor: [INFO] {hoge4,24}
SydTest::Executor: [INFO] {hoge5,20}
SydTest::Executor: [INFO] {hoge6,16}
SydTest::Executor: [INFO] {hoge7,12}
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge8,8}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select rowid  into val from T where F_num = 1 
SydTest::Executor: [INFO] {sequential scan on RCD_T
    execute:
           xx:do until line xx unless check =
           xx:continue
           xx:output to <BietSetVariable>}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T where rowid in val group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(1 desc)
    <-- sequential scan on BMP_I1[search by bitset]
                   xx:iterate once
                        <-- loop once
                                execute:
                                       xx:assign
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,36}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] {hoge3,28}
SydTest::Executor: [INFO] {hoge10,24}
SydTest::Executor: [INFO] {hoge4,24}
SydTest::Executor: [INFO] {hoge5,20}
SydTest::Executor: [INFO] {hoge6,16}
SydTest::Executor: [INFO] {hoge7,12}
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge8,8}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where F_num = 1 AND F_text = 'aaa' group by F_array[]
SydTest::Executor: [INFO] {filter by grouping(2)
    aggregation: 
           xx:count
    <-- filter by BitsetDisintegration
            <-- sequential scan on BMP_I1
                    execute:
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                   xx:file fetch on RCD_T
                   xx:do until line xx unless (check =
                            and check =)
                   xx:continue
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge1,4}
SydTest::Executor: [INFO] {hoge10,20}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where F_num = 1 OR F_text = 'aaa' group by F_array[]
SydTest::Executor: [INFO] {filter by grouping(2)
    aggregation: 
           xx:count
    <-- filter by BitsetDisintegration
            <-- sequential scan on BMP_I1
                    execute:
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                   xx:file fetch on RCD_T
                   xx:do until line xx unless (check =
                            or check =)
                   xx:continue
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge1,68}
SydTest::Executor: [INFO] {hoge10,32}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] {hoge3,28}
SydTest::Executor: [INFO] {hoge4,24}
SydTest::Executor: [INFO] {hoge5,20}
SydTest::Executor: [INFO] {hoge6,16}
SydTest::Executor: [INFO] {hoge7,12}
SydTest::Executor: [INFO] {hoge8,8}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where not F_array[] = 'hoge1' group by F_num
SydTest::Executor: [INFO] {filter by grouping(0)
    aggregation: 
           xx:count
    <-- filter by sort(0)
            <-- sequential scan on RCD_T
                    execute:
                           xx:do until line xx unless not (check rowID(bitset) with data:#xx
                                            <-- index scan on BMP_I1[get by bitset]
                           xx:continue
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {1,28}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*), min(F_num)  from T where F_text = 'bbb' group by F_array[]
SydTest::Executor: [INFO] {filter by grouping(1)
    aggregation: 
           xx:count
           xx:min
    <-- filter by BitsetDisintegration
            <-- sequential scan on BMP_I1
                    execute:
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                   xx:file fetch on RCD_T
                   xx:do until line xx unless check =
                   xx:continue
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,32,1}
SydTest::Executor: [INFO] {hoge2,32,1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where F_text = 'bbb' group by F_array[] order by max(F_num)
SydTest::Executor: [INFO] {filter by sort(2)
    <-- filter by grouping(1)
            aggregation: 
                   xx:count
                   xx:max
            <-- filter by BitsetDisintegration
                    <-- sequential scan on BMP_I1
                            execute:
                    execute:
                           xx:file fetch on VCT_T_$$Conversion
                           xx:file fetch on RCD_T
                           xx:do until line xx unless check =
                           xx:continue
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,32}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] TestGroupBy end.
SydTest::Executor: [INFO] [SydTest Option] TestGroupBy
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I2 on T(F_num)
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] CreateThread
SydTest::Executor: [INFO] [SydTest Option] TestGroupBy
SydTest::Executor: [INFO] [Main] JoinThread
SydTest::Executor: [INFO] TestGroupBy begin.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T group by F_array[]
SydTest::Executor: [INFO] {sequential scan on BMP_I1
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge1,180}
SydTest::Executor: [INFO] {hoge10,32}
SydTest::Executor: [INFO] {hoge2,144}
SydTest::Executor: [INFO] {hoge3,112}
SydTest::Executor: [INFO] {hoge4,84}
SydTest::Executor: [INFO] {hoge5,60}
SydTest::Executor: [INFO] {hoge6,40}
SydTest::Executor: [INFO] {hoge7,24}
SydTest::Executor: [INFO] {hoge8,12}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element()  from T group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(1 desc)
    <-- sequential scan on BMP_I1
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1}
SydTest::Executor: [INFO] {hoge2}
SydTest::Executor: [INFO] {hoge3}
SydTest::Executor: [INFO] {hoge4}
SydTest::Executor: [INFO] {hoge5}
SydTest::Executor: [INFO] {hoge6}
SydTest::Executor: [INFO] {hoge10}
SydTest::Executor: [INFO] {hoge7}
SydTest::Executor: [INFO] {hoge8}
SydTest::Executor: [INFO] {(null)}
SydTest::Executor: [INFO] {hoge9}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), max(F_num) from T group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(2 desc)
    <-- filter by grouping(0)
            aggregation: 
                   xx:max
                   xx:count
            <-- filter by BitsetDisintegration
                    <-- sequential scan on BMP_I1
                            execute:
                    execute:
                           xx:file fetch on VCT_T_$$Conversion
                           xx:file fetch on RCD_T
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,9}
SydTest::Executor: [INFO] {hoge2,8}
SydTest::Executor: [INFO] {hoge3,7}
SydTest::Executor: [INFO] {hoge4,6}
SydTest::Executor: [INFO] {hoge5,5}
SydTest::Executor: [INFO] {hoge6,4}
SydTest::Executor: [INFO] {hoge10,1}
SydTest::Executor: [INFO] {hoge7,3}
SydTest::Executor: [INFO] {hoge8,2}
SydTest::Executor: [INFO] {(null),1}
SydTest::Executor: [INFO] {hoge9,1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T where F_num = 1 group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(1 desc)
    <-- sequential scan on BMP_I1[search by bitset]
                   xx:iterate once
                        <-- index scan on BTR_I2[get by bitset]
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,36}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] {hoge3,28}
SydTest::Executor: [INFO] {hoge10,24}
SydTest::Executor: [INFO] {hoge4,24}
SydTest::Executor: [INFO] {hoge5,20}
SydTest::Executor: [INFO] {hoge6,16}
SydTest::Executor: [INFO] {hoge7,12}
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge8,8}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select rowid  into val from T where F_num = 1 
SydTest::Executor: [INFO] {index scan on BTR_I2}
    execute:
           xx:output to <BietSetVariable>}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T where rowid in val group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(1 desc)
    <-- sequential scan on BMP_I1[search by bitset]
                   xx:iterate once
                        <-- loop once
                                execute:
                                       xx:assign
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,36}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] {hoge3,28}
SydTest::Executor: [INFO] {hoge10,24}
SydTest::Executor: [INFO] {hoge4,24}
SydTest::Executor: [INFO] {hoge5,20}
SydTest::Executor: [INFO] {hoge6,16}
SydTest::Executor: [INFO] {hoge7,12}
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge8,8}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where F_num = 1 AND F_text = 'aaa' group by F_array[]
SydTest::Executor: [INFO] {index scan on BTR_I2[get by bitset]}
SydTest::Executor: [INFO] {filter by grouping(1)
    aggregation: 
           xx:count
    <-- filter by BitsetDisintegration
            <-- sequential scan on BMP_I1[search by bitset]
                    execute:
                   xx:iterate once
                        <-- bitset scan
                                execute:
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                   xx:file fetch on RCD_T
                   xx:do until line xx unless check =
                   xx:continue
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge1,4}
SydTest::Executor: [INFO] {hoge10,20}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where F_num = 1 OR F_text = 'aaa' group by F_array[]
SydTest::Executor: [INFO] {filter by grouping(1)
    aggregation: 
           xx:count
    <-- filter by BitsetDisintegration
            <-- sequential scan on BMP_I1
                    execute:
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                   xx:file fetch on RCD_T
                   xx:do until line xx unless (check rowID(bitset) with data:#xx
                                <-- index scan on BTR_I2[get by bitset]
                   xx:continue
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge1,68}
SydTest::Executor: [INFO] {hoge10,32}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] {hoge3,28}
SydTest::Executor: [INFO] {hoge4,24}
SydTest::Executor: [INFO] {hoge5,20}
SydTest::Executor: [INFO] {hoge6,16}
SydTest::Executor: [INFO] {hoge7,12}
SydTest::Executor: [INFO] {hoge8,8}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where not F_array[] = 'hoge1' group by F_num
SydTest::Executor: [INFO] {filter by grouping(0)
    aggregation: 
           xx:count
    <-- filter by sort(0)
            <-- sequential scan on RCD_T
                    execute:
                           xx:do until line xx unless not (check rowID(bitset) with data:#xx
                                            <-- index scan on BMP_I1[get by bitset]
                           xx:continue
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {1,28}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*), min(F_num)  from T where F_text = 'bbb' group by F_array[]
SydTest::Executor: [INFO] {filter by grouping(1)
    aggregation: 
           xx:count
           xx:min
    <-- filter by BitsetDisintegration
            <-- sequential scan on BMP_I1
                    execute:
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                   xx:file fetch on RCD_T
                   xx:do until line xx unless check =
                   xx:continue
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,32,1}
SydTest::Executor: [INFO] {hoge2,32,1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where F_text = 'bbb' group by F_array[] order by max(F_num)
SydTest::Executor: [INFO] {filter by sort(2)
    <-- filter by grouping(1)
            aggregation: 
                   xx:count
                   xx:max
            <-- filter by BitsetDisintegration
                    <-- sequential scan on BMP_I1
                            execute:
                    execute:
                           xx:file fetch on VCT_T_$$Conversion
                           xx:file fetch on RCD_T
                           xx:do until line xx unless check =
                           xx:continue
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,32}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] TestGroupBy end.
SydTest::Executor: [INFO] [SydTest Option] TestGroupBy
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I3 on T(F_text)
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I4 on T(F_year)
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] CreateThread
SydTest::Executor: [INFO] [SydTest Option] TestGroupBy
SydTest::Executor: [INFO] [Main] JoinThread
SydTest::Executor: [INFO] TestGroupBy begin.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T group by F_array[]
SydTest::Executor: [INFO] {sequential scan on BMP_I1
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge1,180}
SydTest::Executor: [INFO] {hoge10,32}
SydTest::Executor: [INFO] {hoge2,144}
SydTest::Executor: [INFO] {hoge3,112}
SydTest::Executor: [INFO] {hoge4,84}
SydTest::Executor: [INFO] {hoge5,60}
SydTest::Executor: [INFO] {hoge6,40}
SydTest::Executor: [INFO] {hoge7,24}
SydTest::Executor: [INFO] {hoge8,12}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element()  from T group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(1 desc)
    <-- sequential scan on BMP_I1
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1}
SydTest::Executor: [INFO] {hoge2}
SydTest::Executor: [INFO] {hoge3}
SydTest::Executor: [INFO] {hoge4}
SydTest::Executor: [INFO] {hoge5}
SydTest::Executor: [INFO] {hoge6}
SydTest::Executor: [INFO] {hoge10}
SydTest::Executor: [INFO] {hoge7}
SydTest::Executor: [INFO] {hoge8}
SydTest::Executor: [INFO] {(null)}
SydTest::Executor: [INFO] {hoge9}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), max(F_num) from T group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(2 desc)
    <-- filter by grouping(0)
            aggregation: 
                   xx:max
                   xx:count
            <-- filter by BitsetDisintegration
                    <-- sequential scan on BMP_I1
                            execute:
                    execute:
                           xx:file fetch on VCT_T_$$Conversion
                           xx:file fetch on RCD_T
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,9}
SydTest::Executor: [INFO] {hoge2,8}
SydTest::Executor: [INFO] {hoge3,7}
SydTest::Executor: [INFO] {hoge4,6}
SydTest::Executor: [INFO] {hoge5,5}
SydTest::Executor: [INFO] {hoge6,4}
SydTest::Executor: [INFO] {hoge10,1}
SydTest::Executor: [INFO] {hoge7,3}
SydTest::Executor: [INFO] {hoge8,2}
SydTest::Executor: [INFO] {(null),1}
SydTest::Executor: [INFO] {hoge9,1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T where F_num = 1 group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(1 desc)
    <-- sequential scan on BMP_I1[search by bitset]
                   xx:iterate once
                        <-- index scan on BTR_I2[get by bitset]
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,36}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] {hoge3,28}
SydTest::Executor: [INFO] {hoge10,24}
SydTest::Executor: [INFO] {hoge4,24}
SydTest::Executor: [INFO] {hoge5,20}
SydTest::Executor: [INFO] {hoge6,16}
SydTest::Executor: [INFO] {hoge7,12}
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge8,8}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select rowid  into val from T where F_num = 1 
SydTest::Executor: [INFO] {index scan on BTR_I2}
    execute:
           xx:output to <BietSetVariable>}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*) from T where rowid in val group by F_array[] order by count(*) desc
SydTest::Executor: [INFO] {filter by sort(1 desc)
    <-- sequential scan on BMP_I1[search by bitset]
                   xx:iterate once
                        <-- loop once
                                execute:
                                       xx:assign
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,36}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] {hoge3,28}
SydTest::Executor: [INFO] {hoge10,24}
SydTest::Executor: [INFO] {hoge4,24}
SydTest::Executor: [INFO] {hoge5,20}
SydTest::Executor: [INFO] {hoge6,16}
SydTest::Executor: [INFO] {hoge7,12}
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge8,8}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where F_num = 1 AND F_text = 'aaa' group by F_array[]
SydTest::Executor: [INFO] {index scan on BTR_I2[get by bitset]}
    execute:
           xx:do until line xx unless is empty
           xx:iterate once
                <-- index scan on BTR_I3[get by bitset][search by bitset]
           xx:bitset intersect}
SydTest::Executor: [INFO] {sequential scan on BMP_I1[search by bitset]
           xx:iterate once
                <-- bitset scan
                        execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge1,4}
SydTest::Executor: [INFO] {hoge10,20}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where F_num = 1 OR F_text = 'aaa' group by F_array[]
SydTest::Executor: [INFO] {sequential scan on BMP_I1[search by bitset]
           xx:iterate once
                <-- bitset scan
                               xx:iterate once
                                    <-- loop once
                                            execute:
                                                   xx:parallel
                                                    @0
                                                           xx:iterate once
                                                                <-- index scan on BTR_I2[get by bitset]
                                                           xx:iterate once
                                                                <-- index scan on BTR_I3[get by bitset]
                                                   xx:bitset union
                        execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {hoge1,68}
SydTest::Executor: [INFO] {hoge10,32}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] {hoge3,28}
SydTest::Executor: [INFO] {hoge4,24}
SydTest::Executor: [INFO] {hoge5,20}
SydTest::Executor: [INFO] {hoge6,16}
SydTest::Executor: [INFO] {hoge7,12}
SydTest::Executor: [INFO] {hoge8,8}
SydTest::Executor: [INFO] {hoge9,4}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where not F_array[] = 'hoge1' group by F_num
SydTest::Executor: [INFO] {filter by grouping(0)
    aggregation: 
           xx:count
    <-- filter by sort(0)
            <-- sequential scan on RCD_T
                    execute:
                           xx:do until line xx unless not (check rowID(bitset) with data:#xx
                                            <-- index scan on BMP_I1[get by bitset]
                           xx:continue
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {(null),8}
SydTest::Executor: [INFO] {1,28}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*), min(F_num)  from T where F_text = 'bbb' group by F_array[]
SydTest::Executor: [INFO] {filter by grouping(0)
    aggregation: 
           xx:count
           xx:min
    <-- filter by BitsetDisintegration
            <-- sequential scan on BMP_I1[search by bitset]
                    execute:
                   xx:iterate once
                        <-- filter by BitsetDisintegration
                                <-- index scan on BTR_I3[get by bitset]
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                   xx:file fetch on RCD_T
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,32,1}
SydTest::Executor: [INFO] {hoge2,32,1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [TestGroupBy] Command
SydTest::Executor: [INFO] [[SQL Query]] select grouping_element(), count(*)  from T where F_text = 'bbb' group by F_array[] order by max(F_num)
SydTest::Executor: [INFO] {filter by sort(2)
    <-- filter by grouping(0)
            aggregation: 
                   xx:count
                   xx:max
            <-- filter by BitsetDisintegration
                    <-- sequential scan on BMP_I1[search by bitset]
                            execute:
                           xx:iterate once
                                <-- filter by BitsetDisintegration
                                        <-- index scan on BTR_I3[get by bitset]
                    execute:
                           xx:file fetch on VCT_T_$$Conversion
                           xx:file fetch on RCD_T
            execute:
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] {hoge1,32}
SydTest::Executor: [INFO] {hoge2,32}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] TestGroupBy end.
SydTest::Executor: [INFO] [SydTest Option] TestGroupBy
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] end explain
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I1
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I2
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I3
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I4
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop database TESTDB if exists
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] TerminateSession
SydTest::Executor: [INFO] Session Terminate : 0
SydTest::Executor: [INFO] [Main] Terminate
SydTest::Executor: [INFO] Main End.
