SydTest::Executor: [INFO] Main Start.
SydTest::Executor: [INFO] [Main] SetSystemParameter
SydTest::Executor: [INFO] [SydTest Parameter] Plan_TraceOptimizationOutput
SydTest::Executor: [INFO] [SydTest Parameter and Value] Plan_TraceOptimizationOutput, 1
SydTest::Executor: [INFO] [Main] SetSystemParameter
SydTest::Executor: [INFO] [SydTest Parameter] Plan_TraceLevel
SydTest::Executor: [INFO] [SydTest Parameter and Value] Plan_TraceLevel, 2
SydTest::Executor: [INFO] [Main] Initialize
SydTest::Executor: [INFO] [Main] InitializeSession
SydTest::Executor: [INFO] [SydTest Option] TESTDB
SydTest::Executor: [INFO] Session Initialize : 0
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create database TESTDB
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] TerminateSession
SydTest::Executor: [INFO] Session Terminate : 0
SydTest::Executor: [INFO] [Main] InitializeSession
SydTest::Executor: [INFO] [SydTest Option] TESTDB
SydTest::Executor: [INFO] Session Initialize : 0
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create table T(c1 char(4), c2 nchar(4), c3 varchar(4), c4 nvarchar(4), c5 varchar(4) hint nontruncate, c6 nvarchar(4) hint nontruncate, c7 int, c8 bigint, c9 float, c10 datetime, c11 language, c12 decimal(2,0), c1_ar char(4), c2_ar nchar(4), c3_ar varchar(4), c4_ar nvarchar(4), c5_ar varchar(4) hint nontruncate, c6_ar nvarchar(4) hint nontruncate, c7_ar int, c8_ar bigint, c9_ar float, c10_ar datetime, c11_ar language, c12_ar decimal(2,0))
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values((null), 'あいう', 'abx', (null), 'abx', 'abx', (null), 847865165, 3.141592, (null), 'ja', -1, (null), 'あいう', 'abx', (null), 'abx', 'abx', (null), 847865165, 3.141592, (null), 'ja', -1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values((null), (null), 'aby', 'あいう', (null), 'aby', 123, (null), 1.414213, '2007-01-01 12:34:56.789', (null), 1, (null), (null), 'aby', 'あいう', (null), 'aby', 123, (null), 1.414213, '2007-01-01 12:34:56.789', (null), 1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values((null), 'あえう', (null), 'あえう', 'aby', (null), 456, 123456789, (null), '2007-02-01 12:34:56.789', 'zh', (null), (null), 'あえう', (null), 'あえう', 'aby', (null), 456, 123456789, (null), '2007-02-01 12:34:56.789', 'zh', (null))
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('abx', 'あいう', 'aby', 'あえう', 'abx', 'aby', 456, 847865165, 1.414213, '2007-02-01 12:34:56.789', 'ja', 1, 'abx', 'あいう', 'aby', 'あえう', 'abx', 'aby', 456, 847865165, 1.414213, '2007-02-01 12:34:56.789', 'ja', 1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('abx', (null), 'abx', (null), 'aby', (null), 123, (null), 3.141592, (null), 'zh', (null), 'abx', (null), 'abx', (null), 'aby', (null), 123, (null), 3.141592, (null), 'zh', (null))
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('abx', 'あえう', 'abx', 'あいう', (null), 'abx', (null), 123456789, (null), '2007-01-01 12:34:56.789', (null), -1, 'abx', 'あえう', 'abx', 'あいう', (null), 'abx', (null), 123456789, (null), '2007-01-01 12:34:56.789', (null), -1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('aby', 'あいう', (null), 'あいう', 'aby', 'abx', 123, 847865165, 1.414213, '2007-01-01 12:34:56.789', 'zh', (null), 'aby', 'あいう', (null), 'あいう', 'aby', 'abx', 123, 847865165, 1.414213, '2007-01-01 12:34:56.789', 'zh', (null))
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('aby', (null), 'aby', (null), 'abx', (null), (null), 123456789, (null), '2007-02-01 12:34:56.789', (null), 1, 'aby', (null), 'aby', (null), 'abx', (null), (null), 123456789, (null), '2007-02-01 12:34:56.789', (null), 1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('aby', 'あえう', (null), 'あえう', (null), 'aby', (null), (null), 3.141592, (null), 'ja', -1, 'aby', 'あえう', (null), 'あえう', (null), 'aby', (null), (null), 3.141592, (null), 'ja', -1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('aby', (null), 'abx', 'あいう', 'abx', (null), 456, 847865165, 3.141592, '2007-01-01 12:34:56.789', 'ja', -1, 'aby', (null), 'abx', 'あいう', 'abx', (null), 456, 847865165, 3.141592, '2007-01-01 12:34:56.789', 'ja', -1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('abx', 'あえう', 'aby', (null), (null), 'abx', 123, 847865165, (null), (null), 'zh', 1, 'abx', 'あえう', 'aby', (null), (null), 'abx', 123, 847865165, (null), (null), 'zh', 1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('abx', 'あいう', (null), (null), (null), 'aby', 456, 123456789, 3.141592, '2007-02-01 12:34:56.789', (null), (null), 'abx', 'あいう', (null), (null), (null), 'aby', 456, 123456789, 3.141592, '2007-02-01 12:34:56.789', (null), (null))
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values((null), 'あいう', 'abx', 'あえう', 'aby', 'abx', 123, 123456789, 1.414213, '2007-02-01 12:34:56.789', 'ja', -1, (null), 'あいう', 'abx', 'あえう', 'aby', 'abx', 123, 123456789, 1.414213, '2007-02-01 12:34:56.789', 'ja', -1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values((null), (null), (null), 'あえう', 'abx', 'abx', (null), (null), (null), '2007-01-01 12:34:56.789', 'zh', (null), (null), (null), (null), 'あえう', 'abx', 'abx', (null), (null), (null), '2007-01-01 12:34:56.789', 'zh', (null))
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values((null), 'あいう', 'aby', (null), 'aby', 'aby', (null), (null), (null), (null), (null), -1, (null), 'あいう', 'aby', (null), 'aby', 'aby', (null), (null), (null), (null), (null), -1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('abx', 'あえう', 'abx', (null), 'abx', 'aby', 456, (null), 1.414213, (null), 'zh', 1, 'abx', 'あえう', 'abx', (null), 'abx', 'aby', 456, (null), 1.414213, (null), 'zh', 1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('aby', 'あいう', 'aby', 'あいう', 'aby', (null), (null), 123456789, 3.141592, (null), 'zh', 1, 'aby', 'あいう', 'aby', 'あいう', 'aby', (null), (null), 123456789, 3.141592, (null), 'zh', 1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('aby', 'あえう', (null), 'あいう', (null), (null), (null), 847865165, 1.414213, '2007-02-01 12:34:56.789', (null), 1, 'aby', 'あえう', (null), 'あいう', (null), (null), (null), 847865165, 1.414213, '2007-02-01 12:34:56.789', (null), 1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('abx', (null), 'aby', 'あえう', 'abx', 'abx', 456, (null), (null), '2007-02-01 12:34:56.789', 'ja', (null), 'abx', (null), 'aby', 'あえう', 'abx', 'abx', 456, (null), (null), '2007-02-01 12:34:56.789', 'ja', (null))
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values((null), 'あえう', 'abx', 'あえう', 'abx', (null), 123, 847865165, 3.141592, '2007-01-01 12:34:56.789', (null), 1, (null), 'あえう', 'abx', 'あえう', 'abx', (null), 123, 847865165, 3.141592, '2007-01-01 12:34:56.789', (null), 1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] insert into T values('abx', (null), (null), (null), 'aby', 'aby', 123, 123456789, 1.414213, '2007-01-01 12:34:56.789', 'zh', -1, 'abx', (null), (null), (null), 'aby', 'aby', 123, 123456789, 1.414213, '2007-01-01 12:34:56.789', 'zh', -1)
Opt::Generator: [DEBUG] Result Plan[0]:
tuples to data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
    execute:
           xx:generate rowid to data:#xx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
           xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:xxxx
          xx:lock tuple
          xx:write log
          xx:prepare undolog
          xx:insert RCD_T by data:{#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx,#xx}
          xx:store undolog
          xx:prepare undolog
          xx:insert VCT_T_$$Conversion by data:{#xx,#xx}
          xx:store undolog
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c6, c7, c1)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6, c7, c1 from T where c6 = 'abx' and c7 = 123 and c1 < 'abx' order by c7 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6 = 'abx' and T.c7 = 123 and T.c1 < 'abx') to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c7, c12)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c7, c12 from T where c5 is not null and c7 is not null and c12 is not null order by c5 asc, c7 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is not null
                            and check data:#xx is not null
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {abx,123,1}
SydTest::Executor: [INFO] {abx,456,-1}
SydTest::Executor: [INFO] {abx,456,1}
SydTest::Executor: [INFO] {abx,456,1}
SydTest::Executor: [INFO] {aby,123,-1}
SydTest::Executor: [INFO] {aby,123,-1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c7, c5, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7, c5, c2 from T where c7 is null and c5 is null and c2 is null order by c7 asc, c2 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx is null
                            and check data:#xx is null)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c1, c10)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c1, c10 from T where c10 is null order by c11 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless check data:#xx is null
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {(null),(null),(null)}
SydTest::Executor: [INFO] {ja,(null),(null)}
SydTest::Executor: [INFO] {ja,aby ,(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,aby ,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c1, c10)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c1, c10 from T
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
SydTest::Executor: [INFO] {ja,(null),(null)}
SydTest::Executor: [INFO] {(null),(null),2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] {zh,(null),2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] {ja,abx ,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {(null),abx ,2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] {zh,aby ,2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] {(null),aby ,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] {ja,aby ,(null)}
SydTest::Executor: [INFO] {ja,aby ,2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {(null),abx ,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] {ja,(null),2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] {zh,(null),2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] {(null),(null),(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,aby ,(null)}
SydTest::Executor: [INFO] {(null),aby ,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] {ja,abx ,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] {(null),(null),2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] {zh,abx ,2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c1, c2, c11)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1, c2, c11 from T where c1 = 'abx' and c2 <= 'あいう' and c11 = 'ja' order by c2 desc, c11 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c1 = 'abx' and T.c2 <= 'あいう' and T.c11 = 'ja') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {abx ,あいう ,ja}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c6, c11, c10)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6, c11, c10 from T where c6 like 'ab%' and c11 > 'zh' and c10 = '2007-02-01 12:34:56.789' order by c11 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6 like 'ab%' and T.c11 > 'zh' and T.c10 = 2007-02-01 12:34:56.789) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c3, c6, c10)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3, c6, c10 from T where c3 like 'ab%' and c6 is null and c10 > '2007-01-01 12:34:56.789' order by c3 desc, c6 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c3 like 'ab%' and T.c10 > 2007-01-01 12:34:56.789) to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
                   xx:do until line xx unless check data:#xx is null
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {aby,(null),2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c6, c7)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c6, c7 from T where c5 like 'ab%' and c6 is null and c7 = 123 order by c5 desc, c6 desc
Opt::Generator: [DEBUG] Result Plan[0]:
index scan on T.BTR_I for
        (T.c5 like 'ab%' and T.c7 = 123),
        order by T.c5 desc,T.c6 desc to data:{#xx}
    execute:
           xx:do until line xx unless check data:#xx is null
           xx:continue
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {aby,(null),123}
SydTest::Executor: [INFO] {abx,(null),123}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c2, c1, c4)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2, c1, c4 from T where c2 is null and c1 like 'ab%' order by c2 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and data:#xx like data:#xx)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {(null),abx ,(null)}
SydTest::Executor: [INFO] {(null),aby ,(null)}
SydTest::Executor: [INFO] {(null),aby ,あいう}
SydTest::Executor: [INFO] {(null),abx ,あえう}
SydTest::Executor: [INFO] {(null),abx ,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c7, c4, c11)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7, c4, c11 from T where c4 <> 'あえう' and c11 is null order by c4 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx != data:#xx)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {123,あいう,(null)}
SydTest::Executor: [INFO] {(null),あいう,(null)}
SydTest::Executor: [INFO] {(null),あいう,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c4, c5, c8)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4, c5, c8 from T where c4 < 'あいう' and c5 like 'ab%' and c8 = 847865165 order by c4 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c4 < 'あいう' and T.c5 like 'ab%'
                    and T.c8 = 847865165) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c2, c10, c9)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2, c10, c9 from T where c2 is null and c10 = '2007-02-01 12:34:56.789' and c9 = 1.414213 order by c2 asc, c10 asc, c9 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c12, c7)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c12, c7 from T where c11 is null and c12 <> -1 and c7 = 123 order by c11 desc, c7 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx
                            and check data:#xx != data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),1,123}
SydTest::Executor: [INFO] {(null),1,123}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c2, c3)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c2, c3 from T where c5 is null and c2 = 'あえう' and c3 <= 'aby'
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless (check data:#xx is null
                    and check data:#xx = data:#xx
                    and check data:#xx <= data:#xx)
           xx:continue
SydTest::Executor: [INFO] {(null),あえう ,abx}
SydTest::Executor: [INFO] {(null),あえう ,aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c1, c4, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1, c4, c2 from T where c1 > 'abx' and c4 = 'あいう' and c2 like 'あ%う' order by c1 desc, c4 desc, c2 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc,2 desc):#
0 <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c1 > 'abx' and T.c4 = 'あいう' and T.c2 like 'あ%う') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c9, c1, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9, c1, c2 from T where c9 < 3.141592 and c1 = 'abx' and c2 like 'あ%う' order by c9 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c9 < 3.141592E0 and T.c1 = 'abx'
                    and T.c2 like 'あ%う') to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c8, c6, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8, c6, c2 from T where c8 < 847865165 and c6 is null and c2 is not null order by c8 desc
Opt::Generator: [DEBUG] Result Plan[0]:
index scan on T.BTR_I for
        T.c8 < 847865165,
        order by T.c8 desc to data:{#xx,#xx,#xx}
    execute:
           xx:do until line xx unless (check data:#xx is not null
                    and check data:#xx is null)
           xx:continue
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {123456789,(null),あえう }
SydTest::Executor: [INFO] {123456789,(null),あいう }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c7, c2, c1)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7, c2, c1 from T where c7 = 456 and c2 > 'あえう' and c1 like 'ab%' order by c7 desc, c2 desc, c1 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc,2 desc):#
0 <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c7 = 456 and T.c2 > 'あえう' and T.c1 like 'ab%') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c4, c12, c11)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4, c12, c11 from T where c4 <> 'あえう' and c12 is null and c11 <= 'zh' order by c4 desc, c11 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx != data:#xx
                            and check data:#xx <= data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {あいう,(null),zh}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c7, c3, c11)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7, c3, c11 from T where c7 >= 123 and c3 like 'ab%' and c11 > 'ja' order by c7 desc, c11 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c7 >= 123 and T.c3 like 'ab%' and T.c11 > 'ja') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {456,abx,zh}
SydTest::Executor: [INFO] {123,abx,zh}
SydTest::Executor: [INFO] {123,aby,zh}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c9, c11, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9, c11, c2 from T where c9 = 1.414213 and c11 = 'zh' order by c9 asc, c11 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c9 = 1.414213E0 and T.c11 = 'zh') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {1.414213E0,zh,(null)}
SydTest::Executor: [INFO] {1.414213E0,zh,あいう }
SydTest::Executor: [INFO] {1.414213E0,zh,あえう }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c4, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c4, c2 from T where c11 = 'ja' and c4 = 'あいう' and c2 = 'あいう' order by c2 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c11 = 'ja' and T.c4 = 'あいう' and T.c2 = 'あいう') to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c8, c6, c5)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8, c6, c5 from T where c8 = 847865165 and c6 = 'abx' and c5 <> 'abx' order by c8 desc, c6 asc, c5 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c8 = 847865165 and T.c6 = 'abx' and T.c5 != 'abx') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {847865165,abx,aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c4, c11, c1)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4, c11, c1 from T where c4 = 'あえう' and c11 = 'zh' and c1 is null
Opt::Generator: [DEBUG] Result Plan[0]:
index scan on T.BTR_I for
        (T.c4 = 'あえう' and T.c11 = 'zh') to data:{#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
           xx:do until line xx unless check data:#xx is null
           xx:continue
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {あえう,zh,(null)}
SydTest::Executor: [INFO] {あえう,zh,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c9, c4, c10)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9, c4, c10 from T where c9 <> 3.141592 and c10 = '2007-01-01 12:34:56.789' order by c9 asc, c4 asc, c10 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,2,1 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx != data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {1.414213E0,(null),2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] {1.414213E0,あいう,2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] {1.414213E0,あいう,2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c12, c2, c1)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12, c2, c1 from T where c2 is null and c1 > 'abx' order by c12 desc, c2 asc, c1 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(2 desc,0,1 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx > data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {1,(null),aby }
SydTest::Executor: [INFO] {-1,(null),aby }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c2, c3, c12)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2, c3, c12 from T where c2 = 'あえう' and c3 <> 'aby' and c12 <> 1 order by c3 asc, c12 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c2 = 'あえう' and T.c3 != 'aby' and T.c12 != 1) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {あえう ,abx,-1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c12, c3, c4)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12, c3, c4 from T where c12 = -1 and c3 = 'abx' and c4 = 'あいう' order by c3 asc, c4 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c12 = -1 and T.c3 = 'abx' and T.c4 = 'あいう') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {-1,abx,あいう}
SydTest::Executor: [INFO] {-1,abx,あいう}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c4, c3, c11)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4, c3, c11 from T where c4 is null and c11 is not null order by c3 asc, c11 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(1,0 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),(null),zh}
SydTest::Executor: [INFO] {(null),abx,zh}
SydTest::Executor: [INFO] {(null),abx,zh}
SydTest::Executor: [INFO] {(null),abx,ja}
SydTest::Executor: [INFO] {(null),aby,zh}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c2, c9, c8)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2, c9, c8 from T where c2 <> 'あえう' and c9 = 1.414213 and c8 is null order by c2 asc, c9 desc, c8 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx
                            and check data:#xx != data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c12, c3, c11)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12, c3, c11 from T where c12 is null and c3 = 'aby' and c11 < 'zh' order by c3 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx
                            and check data:#xx < data:#xx)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {(null),aby,ja}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c7, c11)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c7, c11 from T where c7 is null and c11 is null order by c7 desc, c11 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx is null)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),(null),(null)}
SydTest::Executor: [INFO] {abx,(null),(null)}
SydTest::Executor: [INFO] {aby,(null),(null)}
SydTest::Executor: [INFO] {(null),(null),(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c7, c5)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c7, c5 from T where c11 > 'ja' and c7 = 123 and c5 is null order by c11 desc, c7 desc
Opt::Generator: [DEBUG] Result Plan[0]:
index scan on T.BTR_I for
        (T.c11 > 'ja' and T.c7 = 123),
        order by T.c11 desc,T.c7 desc to data:{#xx}
    execute:
           xx:do until line xx unless check data:#xx is null
           xx:continue
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {zh,123,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c10, c7, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10, c7, c2 from T where c10 is not null and c7 = 456 and c2 = 'あえう' order by c10 asc, c7 desc, c2 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx = data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {2007-02-01 12:34:56.789,456,あえう }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c10, c9)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c10, c9 from T where c11 = 'ja' and c10 = '2007-01-01 12:34:56.789' and c9 = 3.141592 order by c10 desc, c9 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c11 = 'ja' and T.c10 = 2007-01-01 12:34:56.789
                    and T.c9 = 3.141592E0) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {ja,2007-01-01 12:34:56.789,3.141592E0}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c9, c12, c10)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9, c12, c10 from T where c9 is null and c12 = 1 and c10 is not null order by c9 asc, c12 asc, c10 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {(null),1,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c5, c9)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c5, c9 from T where c11 <> 'ja' and c5 is null and c9 = 3.141592 order by c11 asc, c5 desc, c9 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx
                            and check data:#xx != data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c10, c5, c11)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10, c5, c11 from T where c10 = '2007-01-01 12:34:56.789' and c5 is null order by c10 desc
Opt::Generator: [DEBUG] Result Plan[0]:
index scan on T.BTR_I for
        T.c10 = 2007-01-01 12:34:56.789,
        order by T.c10 desc to data:{#xx}
    execute:
           xx:do until line xx unless check data:#xx is null
           xx:continue
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {2007-01-01 12:34:56.789,(null),(null)}
SydTest::Executor: [INFO] {2007-01-01 12:34:56.789,(null),(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c8, c7)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c8, c7 from T where c8 is null and c7 = 123 order by c5 asc, c8 desc, c7 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(2,0 desc,1):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {(null),(null),123}
SydTest::Executor: [INFO] {aby,(null),123}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c7, c9, c3)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7, c9, c3 from T where c7 = 123 and c9 = 3.141592 and c3 like 'ab%' order by c9 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c7 = 123 and T.c9 = 3.141592E0 and T.c3 like 'ab%') to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {123,3.141592E0,abx}
SydTest::Executor: [INFO] {123,3.141592E0,abx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c9, c7)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c9, c7 from T where c11 = 'ja' and c9 is not null and c7 >= 123 order by c11 desc, c7 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                T.c11 = 'ja' to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
                   xx:do until line xx unless (check data:#xx is not null
                            and check data:#xx >= data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {ja,1.414213E0,123}
SydTest::Executor: [INFO] {ja,1.414213E0,456}
SydTest::Executor: [INFO] {ja,3.141592E0,456}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c1, c11)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c1, c11 from T where c5 = 'abx' and c1 like 'ab%' and c11 is null order by c11 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c5 = 'abx' and T.c1 like 'ab%') to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx}
                   xx:do until line xx unless check data:#xx is null
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {abx,aby ,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c12, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c12, c2 from T where c5 is null and c12 = -1 and c2 = 'あいう' order by c5 asc, c12 asc, c2 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c1, c5, c3)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1, c5, c3 from T where c1 is null and c5 <= 'abx' and c3 is null order by c1 asc, c5 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx is null
                            and check data:#xx <= data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),abx,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c10, c3)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c10, c3 from T where c5 = 'abx' and c10 = '2007-01-01 12:34:56.789' and c3 = 'abx' order by c5 asc, c10 asc, c3 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c5 = 'abx' and T.c10 = 2007-01-01 12:34:56.789
                    and T.c3 = 'abx') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {abx,2007-01-01 12:34:56.789,abx}
SydTest::Executor: [INFO] {abx,2007-01-01 12:34:56.789,abx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c10, c7, c6)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10, c7, c6 from T where c10 = '2007-01-01 12:34:56.789' and c7 is null and c6 is null order by c10 asc, c7 asc, c6 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                T.c10 = 2007-01-01 12:34:56.789 to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx is null)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c10, c2, c6)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10, c2, c6 from T where c10 <= '2007-02-01 12:34:56.789' and c2 = 'あえう' and c6 >= 'aby' order by c10 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10 <= 2007-02-01 12:34:56.789 and T.c2 = 'あえう'
                    and T.c6 >= 'aby') to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c5, c10)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c5, c10 from T where c11 = 'zh' and c5 = 'aby' and c10 = '2007-02-01 12:34:56.789' order by c11 asc, c5 asc, c10 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c11 = 'zh' and T.c5 = 'aby' and T.c10 = 2007-02-01 12:34:56.789) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {zh,aby,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c3, c10, c1)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3, c10, c1 from T where c10 <= '2007-01-01 12:34:56.789' and c1 is null order by c3 asc, c10 asc, c1 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(2,0,1 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx <= data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {(null),2007-01-01 12:34:56.789,(null)}
SydTest::Executor: [INFO] {abx,2007-01-01 12:34:56.789,(null)}
SydTest::Executor: [INFO] {aby,2007-01-01 12:34:56.789,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c9, c1, c6)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9, c1, c6 from T where c9 = 1.414213 and c1 = 'aby' and c6 is not null order by c9 desc, c1 asc, c6 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                T.c9 = 1.414213E0 to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {1.414213E0,aby ,abx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c2, c12)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c2, c12 from T where c11 = 'zh' and c2 like 'あ%う' and c12 >= 1 order by c11 asc, c2 asc, c12 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c11 = 'zh' and T.c2 like 'あ%う'
                    and T.c12 >= 1) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c11, c12)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c11, c12 from T where c5 < 'abx' and c11 = 'ja' and c12 = -1 order by c5 asc, c11 asc, c12 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c5 < 'abx' and T.c11 = 'ja' and T.c12 = -1) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c4, c7, c3)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4, c7, c3 from T where c4 > 'あえう' and c7 <> 456 and c3 like 'ab%' order by c4 asc, c7 asc, c3 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c4 > 'あえう' and T.c7 != 456 and T.c3 like 'ab%') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c6, c10, c8)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6, c10, c8 from T where c6 is null and c10 = '2007-02-01 12:34:56.789' and c8 is null order by c6 asc, c10 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx is null
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c1, c2, c7)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1, c2, c7 from T where c1 >= 'abx' and c2 = 'あいう' and c7 = 123 order by c1 desc, c2 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c1 >= 'abx' and T.c2 = 'あいう' and T.c7 = 123) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {aby ,あいう ,123}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c1, c12, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1, c12, c2 from T where c1 > 'abx' and c12 is null and c2 = 'あいう' order by c1 desc
Opt::Generator: [DEBUG] Result Plan[0]:
index scan on T.BTR_I for
        (T.c1 > 'abx' and T.c2 = 'あいう'),
        order by T.c1 desc to data:{#xx}
    execute:
           xx:do until line xx unless check data:#xx is null
           xx:continue
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {aby ,(null),あいう }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c7, c1)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c7, c1 from T where c5 like 'ab%' and c7 = 123 and c1 is null order by c5 asc, c7 desc, c1 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c5 like 'ab%' and T.c7 = 123) to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
                   xx:do until line xx unless check data:#xx is null
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {abx,123,(null)}
SydTest::Executor: [INFO] {aby,123,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c7, c2, c1)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7, c2, c1 from T where c7 = 123 and c2 = 'あいう' and c1 = 'abx' order by c2 desc, c1 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c7 = 123 and T.c2 = 'あいう' and T.c1 = 'abx') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c3, c12, c1)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3, c12, c1 from T where c3 <= 'aby' and c12 = 1 and c1 is null order by c12 desc, c1 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c3 <= 'aby' and T.c12 = 1) to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
                   xx:do until line xx unless check data:#xx is null
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {abx,1,(null)}
SydTest::Executor: [INFO] {aby,1,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c6, c12, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6, c12, c2 from T where c6 = 'abx' and c12 is null and c2 = 'あいう' order by c6 desc, c12 asc, c2 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6 = 'abx' and T.c2 = 'あいう') to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
                   xx:do until line xx unless check data:#xx is null
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {abx,(null),あいう }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c3, c8, c9)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3, c8, c9 from T where c3 = 'aby' and c8 is not null and c9 is null order by c3 desc, c8 asc, c9 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                T.c3 = 'aby' to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
                   xx:do until line xx unless (check data:#xx is not null
                            and check data:#xx is null)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {aby,123456789,(null)}
SydTest::Executor: [INFO] {aby,847865165,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c9, c12, c10)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9, c12, c10 from T where c9 is null and c12 = -1 and c10 = '2007-01-01 12:34:56.789' order by c9 desc, c12 asc, c10 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {(null),-1,2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c7, c1)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c7, c1 from T where c11 is null and c7 = 456 and c1 like 'ab%' order by c7 asc, c1 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx
                            and data:#xx like data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),456,abx }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c6, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c6, c2 from T where c11 is null and c2 = 'あえう' order by c11 asc, c6 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),(null),あえう }
SydTest::Executor: [INFO] {(null),(null),あえう }
SydTest::Executor: [INFO] {(null),abx,あえう }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c12, c10, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12, c10, c2 from T where c12 = 1 and c10 is null and c2 <> 'あえう' order by c10 asc
Opt::Generator: [DEBUG] Result Plan[0]:
index scan on T.BTR_I for
        (T.c12 = 1 and T.c2 != 'あえう'),
        order by T.c10 asc to data:{#xx}
    execute:
           xx:do until line xx unless check data:#xx is null
           xx:continue
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {1,(null),あいう }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c4, c1, c12)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4, c1, c12 from T where c4 is null and c1 is null and c12 = 1 order by c4 asc, c12 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx is null
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c12, c10, c1)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12, c10, c1 from T where c12 is null and c1 = 'abx' order by c1 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {(null),(null),abx }
SydTest::Executor: [INFO] {(null),2007-02-01 12:34:56.789,abx }
SydTest::Executor: [INFO] {(null),2007-02-01 12:34:56.789,abx }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c5, c10, c7)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5, c10, c7 from T where c5 > 'abx' and c10 = '2007-01-01 12:34:56.789' and c7 = 123 order by c5 desc, c10 asc, c7 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c5 > 'abx' and T.c10 = 2007-01-01 12:34:56.789
                    and T.c7 = 123) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {aby,2007-01-01 12:34:56.789,123}
SydTest::Executor: [INFO] {aby,2007-01-01 12:34:56.789,123}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c10, c2, c8)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10, c2, c8 from T where c10 = '2007-02-01 12:34:56.789' and c2 like 'あ%う' and c8 = 123456789 order by c10 desc, c2 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10 = 2007-02-01 12:34:56.789 and T.c2 like 'あ%う'
                    and T.c8 = 123456789) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c10, c6, c7)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10, c6, c7 from T where c10 <= '2007-02-01 12:34:56.789' and c6 = 'aby' and c7 <> 456 order by c6 asc, c7 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10 <= 2007-02-01 12:34:56.789 and T.c6 = 'aby'
                    and T.c7 != 456) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {2007-01-01 12:34:56.789,aby,123}
SydTest::Executor: [INFO] {2007-01-01 12:34:56.789,aby,123}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c4, c7, c10)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4, c7, c10 from T where c4 is null and c7 = 123 and c10 is null order by c4 desc, c10 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx is null
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),123,(null)}
SydTest::Executor: [INFO] {(null),123,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c12, c8, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12, c8, c2 from T where c12 is not null and c8 = 123456789 and c2 = 'あえう' order by c8 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx = data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {-1,123456789,あえう }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c3, c8, c5)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3, c8, c5 from T where c3 = 'aby' and c8 = 123456789 and c5 > 'aby' order by c3 asc, c8 desc, c5 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c3 = 'aby' and T.c8 = 123456789 and T.c5 > 'aby') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c8, c1, c5)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8, c1, c5 from T where c8 is not null and c1 <= 'abx' and c5 = 'abx'
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless (check data:#xx = data:#xx
                    and check data:#xx is not null
                    and check data:#xx <= data:#xx)
           xx:continue
SydTest::Executor: [INFO] {847865165,abx ,abx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c9, c8, c12)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9, c8, c12 from T where c9 = 3.141592 and c12 = -1 order by c8 desc, c12 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(1 desc,0 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c9 = 3.141592E0 and T.c12 = -1) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {3.141592E0,847865165,-1}
SydTest::Executor: [INFO] {3.141592E0,847865165,-1}
SydTest::Executor: [INFO] {3.141592E0,(null),-1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c8, c7, c11)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8, c7, c11 from T where c8 < 847865165 and c7 = 123 order by c11 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c8 < 847865165 and T.c7 = 123) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {123456789,123,zh}
SydTest::Executor: [INFO] {123456789,123,ja}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c1, c2, c3)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1, c2, c3 from T where c2 = 'あえう' and c3 is null order by c2 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {(null),あえう ,(null)}
SydTest::Executor: [INFO] {aby ,あえう ,(null)}
SydTest::Executor: [INFO] {aby ,あえう ,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c3, c4, c9)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3, c4, c9 from T where c3 = 'aby' and c4 = 'あえう' and c9 = 1.414213 order by c4 desc, c9 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c3 = 'aby' and T.c4 = 'あえう' and T.c9 = 1.414213E0) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {aby,あえう,1.414213E0}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c10, c4, c5)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10, c4, c5 from T where c10 <= '2007-01-01 12:34:56.789' and c4 = 'あいう' and c5 = 'abx' order by c10 asc, c4 asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10 <= 2007-01-01 12:34:56.789 and T.c4 = 'あいう'
                    and T.c5 = 'abx') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {2007-01-01 12:34:56.789,あいう,abx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create index I on T(c11, c1, c2)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:do until line xx unless check data:{#xx} is null
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11, c1, c2 from T where c11 is null and c1 = 'abx' and c2 = 'あいう' order by c11 desc, c2 desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),abx ,あいう }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c3_ar, c10_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3_ar, c10_ar, c4_ar from T where c3_ar = 'aby' and c10_ar = '2007-02-01 12:34:56.789' and c4_ar is null order by c3_ar desc, c4_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c3_ar = 'aby' and T.c10_ar = 2007-02-01 12:34:56.789
                    and T.c4_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {aby,2007-02-01 12:34:56.789,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c9_ar, c4_ar, c10_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9_ar, c4_ar, c10_ar from T where c9_ar <= 1.414213 and c4_ar <= 'あえう' and c10_ar = '2007-02-01 12:34:56.789' order by c9_ar asc, c10_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c9_ar <= 1.414213E0 and T.c4_ar <= 'あえう'
                    and T.c10_ar = 2007-02-01 12:34:56.789) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {1.414213E0,あいう,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] {1.414213E0,あえう,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] {1.414213E0,あえう,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c2_ar, c12_ar, c3_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2_ar, c12_ar, c3_ar from T where c2_ar = 'あいう' and c12_ar = -1 and c3_ar = 'abx' order by c2_ar desc, c12_ar desc, c3_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc,2 desc):#
0 <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c2_ar = 'あいう' and T.c12_ar = -1
                    and T.c3_ar = 'abx') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {あいう ,-1,abx}
SydTest::Executor: [INFO] {あいう ,-1,abx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c4_ar, c10_ar, c5_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4_ar, c10_ar, c5_ar from T where c4_ar is null and c10_ar is null and c5_ar is null order by c5_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c4_ar is null and T.c10_ar is null
                    and T.c5_ar is null) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {(null),(null),(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c9_ar, c3_ar, c8_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9_ar, c3_ar, c8_ar from T where c9_ar = 1.414213 and c3_ar = 'aby' and c8_ar = 123456789 order by c3_ar desc, c8_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c9_ar = 1.414213E0 and T.c3_ar = 'aby'
                    and T.c8_ar = 123456789) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c7_ar, c11_ar, c6_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7_ar, c11_ar, c6_ar from T where c7_ar = 456 and c11_ar is null order by c7_ar desc, c11_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c7_ar = 456 and T.c11_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {456,(null),aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c10_ar, c6_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10_ar, c6_ar, c4_ar from T where c10_ar = '2007-01-01 12:34:56.789' and c6_ar <> 'abx' and c4_ar <= 'あいう' order by c10_ar asc, c4_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10_ar = 2007-01-01 12:34:56.789
                    and T.c6_ar != 'abx' and T.c4_ar <= 'あいう') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {2007-01-01 12:34:56.789,aby,あいう}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c6_ar, c9_ar, c7_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6_ar, c9_ar, c7_ar from T where c6_ar = 'abx' and c9_ar >= 3.141592 and c7_ar is null order by c6_ar desc, c9_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6_ar = 'abx' and T.c9_ar >= 3.141592E0
                    and T.c7_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {abx,3.141592E0,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c3_ar, c8_ar, c9_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3_ar, c8_ar, c9_ar from T where c3_ar is null and c8_ar = 123456789 and c9_ar is not null order by c8_ar asc, c9_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                T.c3_ar is null to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),123456789,3.141592E0}
SydTest::Executor: [INFO] {(null),123456789,1.414213E0}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c3_ar, c2_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c3_ar, c2_ar from T where c11_ar is null order by c11_ar asc, c3_ar asc, c2_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                T.c11_ar is null to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {(null),(null),あえう }
SydTest::Executor: [INFO] {(null),(null),あいう }
SydTest::Executor: [INFO] {(null),abx,あえう }
SydTest::Executor: [INFO] {(null),abx,あえう }
SydTest::Executor: [INFO] {(null),aby,あいう }
SydTest::Executor: [INFO] {(null),aby,(null)}
SydTest::Executor: [INFO] {(null),aby,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c3_ar, c2_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c3_ar, c2_ar from T
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.BTR_I to data:{#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
SydTest::Executor: [INFO] {(null),(null),あいう }
SydTest::Executor: [INFO] {(null),(null),あえう }
SydTest::Executor: [INFO] {(null),abx,あえう }
SydTest::Executor: [INFO] {(null),abx,あえう }
SydTest::Executor: [INFO] {(null),aby,(null)}
SydTest::Executor: [INFO] {(null),aby,(null)}
SydTest::Executor: [INFO] {(null),aby,あいう }
SydTest::Executor: [INFO] {ja,(null),あえう }
SydTest::Executor: [INFO] {ja,abx,(null)}
SydTest::Executor: [INFO] {ja,abx,あいう }
SydTest::Executor: [INFO] {ja,abx,あいう }
SydTest::Executor: [INFO] {ja,aby,(null)}
SydTest::Executor: [INFO] {ja,aby,あいう }
SydTest::Executor: [INFO] {zh,(null),(null)}
SydTest::Executor: [INFO] {zh,(null),(null)}
SydTest::Executor: [INFO] {zh,(null),あいう }
SydTest::Executor: [INFO] {zh,(null),あえう }
SydTest::Executor: [INFO] {zh,abx,(null)}
SydTest::Executor: [INFO] {zh,abx,あえう }
SydTest::Executor: [INFO] {zh,aby,あいう }
SydTest::Executor: [INFO] {zh,aby,あえう }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c12_ar, c11_ar, c1_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12_ar, c11_ar, c1_ar from T where c12_ar > -1 and c11_ar = 'ja' and c1_ar is null order by c11_ar desc, c1_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c12_ar > -1 and T.c11_ar = 'ja' and T.c1_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c8_ar, c2_ar, c12_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8_ar, c2_ar, c12_ar from T where c2_ar = 'あいう' and c12_ar <> -1 order by c12_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx != data:#xx)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {123456789,あいう ,1}
SydTest::Executor: [INFO] {847865165,あいう ,1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c6_ar, c1_ar, c3_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6_ar, c1_ar, c3_ar from T where c6_ar <> 'abx' and c1_ar like 'ab%' and c3_ar is null order by c1_ar desc, c3_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and data:#xx like data:#xx
                            and check data:#xx != data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {aby,aby ,(null)}
SydTest::Executor: [INFO] {aby,abx ,(null)}
SydTest::Executor: [INFO] {aby,abx ,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c2_ar, c9_ar, c8_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2_ar, c9_ar, c8_ar from T where c2_ar >= 'あえう' and c9_ar = 1.414213 and c8_ar is not null order by c2_ar desc, c9_ar desc, c8_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
index scan on T.BTR_I for
        T.c2_ar >= 'あえう',
        order by T.c2_ar desc,T.c9_ar desc,T.c8_ar desc to data:{#xx,#xx,#xx}
    execute:
           xx:do until line xx unless (check data:#xx = data:#xx
                    and check data:#xx is not null)
           xx:continue
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {あえう ,1.414213E0,847865165}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c8_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c8_ar, c4_ar from T where c11_ar is not null and c8_ar is null and c4_ar like 'あ%う' order by c8_ar desc, c4_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and data:#xx like data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {ja,(null),あえう}
SydTest::Executor: [INFO] {ja,(null),あえう}
SydTest::Executor: [INFO] {zh,(null),あえう}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c4_ar, c8_ar, c10_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4_ar, c8_ar, c10_ar from T where c4_ar > 'あいう' and c8_ar = 847865165 and c10_ar >= '2007-01-01 12:34:56.789' order by c4_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c4_ar > 'あいう' and T.c8_ar = 847865165
                    and T.c10_ar >= 2007-01-01 12:34:56.789) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {あえう,847865165,2007-01-01 12:34:56.789}
SydTest::Executor: [INFO] {あえう,847865165,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c9_ar, c10_ar, c12_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9_ar, c10_ar, c12_ar from T where c9_ar = 3.141592 and c10_ar < '2007-01-01 12:34:56.789' and c12_ar = -1 order by c9_ar desc, c10_ar asc, c12_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c9_ar = 3.141592E0 and T.c10_ar < 2007-01-01 12:34:56.789
                    and T.c12_ar = -1) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c4_ar, c1_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c4_ar, c1_ar from T where c11_ar = 'ja' and c4_ar = 'あいう' and c1_ar <> 'abx' order by c4_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c11_ar = 'ja' and T.c4_ar = 'あいう'
                    and T.c1_ar != 'abx') to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {ja,あいう,aby }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c7_ar, c11_ar, c9_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7_ar, c11_ar, c9_ar from T where c7_ar = 456 and c11_ar is null and c9_ar = 1.414213 order by c7_ar desc, c11_ar desc, c9_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c7_ar = 456 and T.c11_ar is null
                    and T.c9_ar = 1.414213E0) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c5_ar, c4_ar, c8_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5_ar, c4_ar, c8_ar from T where c5_ar = 'aby' and c4_ar like 'あ%う' and c8_ar > 123456789 order by c8_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c5_ar = 'aby' and T.c4_ar like 'あ%う'
                    and T.c8_ar > 123456789) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {aby,あいう,847865165}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c10_ar, c9_ar, c1_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10_ar, c9_ar, c1_ar from T where c10_ar = '2007-02-01 12:34:56.789' and c9_ar = 1.414213 and c1_ar is null order by c10_ar desc, c9_ar asc, c1_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10_ar = 2007-02-01 12:34:56.789
                    and T.c9_ar = 1.414213E0 and T.c1_ar is null) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {2007-02-01 12:34:56.789,1.414213E0,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c6_ar, c10_ar, c5_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6_ar, c10_ar, c5_ar from T where c6_ar is null and c5_ar like 'ab%' order by c6_ar desc, c10_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6_ar is null and T.c5_ar like 'ab%') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),(null),aby}
SydTest::Executor: [INFO] {(null),(null),aby}
SydTest::Executor: [INFO] {(null),2007-01-01 12:34:56.789,abx}
SydTest::Executor: [INFO] {(null),2007-01-01 12:34:56.789,abx}
SydTest::Executor: [INFO] {(null),2007-02-01 12:34:56.789,abx}
SydTest::Executor: [INFO] {(null),2007-02-01 12:34:56.789,aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c7_ar, c3_ar, c1_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7_ar, c3_ar, c1_ar from T where c3_ar is null and c1_ar = 'aby' order by c7_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {123,(null),aby }
SydTest::Executor: [INFO] {(null),(null),aby }
SydTest::Executor: [INFO] {(null),(null),aby }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c8_ar, c11_ar, c7_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8_ar, c11_ar, c7_ar from T where c8_ar <= 847865165 and c11_ar = 'ja' and c7_ar = 123 order by c8_ar asc, c11_ar asc, c7_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c8_ar <= 847865165 and T.c11_ar = 'ja'
                    and T.c7_ar = 123) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {123456789,ja,123}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c8_ar, c2_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8_ar, c2_ar, c4_ar from T where c8_ar is null and c4_ar = 'あえう' order by c8_ar desc, c4_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c8_ar is null and T.c4_ar = 'あえう') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),(null),あえう}
SydTest::Executor: [INFO] {(null),(null),あえう}
SydTest::Executor: [INFO] {(null),あえう ,あえう}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c1_ar, c7_ar, c8_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1_ar, c7_ar, c8_ar from T where c1_ar is null and c7_ar < 123 and c8_ar = 847865165 order by c1_ar desc, c7_ar desc, c8_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc,2 desc):#
0 <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c1_ar is null and T.c7_ar < 123 and T.c8_ar = 847865165) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c10_ar, c6_ar, c3_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10_ar, c6_ar, c3_ar from T where c10_ar = '2007-01-01 12:34:56.789' and c6_ar is null and c3_ar is null order by c10_ar asc, c6_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10_ar = 2007-01-01 12:34:56.789
                    and T.c6_ar is null and T.c3_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c5_ar, c9_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c5_ar, c9_ar from T where c11_ar = 'ja' and c5_ar like 'ab%' and c9_ar is not null order by c11_ar desc, c5_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
index scan on T.BTR_I for
        T.c11_ar = 'ja',
        order by T.c11_ar desc,T.c5_ar desc to data:{#xx,#xx,#xx}
    execute:
           xx:do until line xx unless (data:#xx like data:#xx
                    and check data:#xx is not null)
           xx:continue
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {ja,aby,1.414213E0}
SydTest::Executor: [INFO] {ja,abx,3.141592E0}
SydTest::Executor: [INFO] {ja,abx,3.141592E0}
SydTest::Executor: [INFO] {ja,abx,1.414213E0}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c10_ar, c7_ar, c1_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10_ar, c7_ar, c1_ar from T where c10_ar < '2007-01-01 12:34:56.789' and c1_ar >= 'abx' order by c10_ar desc, c7_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10_ar < 2007-01-01 12:34:56.789
                    and T.c1_ar >= 'abx') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c4_ar, c8_ar, c1_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4_ar, c8_ar, c1_ar from T where c4_ar = 'あえう' and c8_ar <> 123456789 and c1_ar = 'aby' order by c4_ar asc, c8_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c4_ar = 'あえう' and T.c8_ar != 123456789
                    and T.c1_ar = 'aby') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c10_ar, c5_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c10_ar, c5_ar from T where c11_ar = 'ja' and c10_ar is null and c5_ar is null order by c11_ar desc, c10_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c11_ar = 'ja' and T.c10_ar is null
                    and T.c5_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {ja,(null),(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c6_ar, c9_ar, c1_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6_ar, c9_ar, c1_ar from T where c6_ar is null and c9_ar is null and c1_ar > 'aby' order by c6_ar desc, c9_ar asc, c1_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6_ar is null and T.c9_ar is null
                    and T.c1_ar > 'aby') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c3_ar, c6_ar, c11_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3_ar, c6_ar, c11_ar from T where c3_ar = 'abx' and c6_ar like 'ab%' and c11_ar = 'ja' order by c3_ar desc, c6_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c3_ar = 'abx' and T.c6_ar like 'ab%'
                    and T.c11_ar = 'ja') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {abx,abx,ja}
SydTest::Executor: [INFO] {abx,abx,ja}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c3_ar, c11_ar, c12_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3_ar, c11_ar, c12_ar from T where c11_ar is null and c12_ar = -1 order by c3_ar desc, c12_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(1 desc,0):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx is null
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {aby,(null),-1}
SydTest::Executor: [INFO] {abx,(null),-1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c3_ar, c7_ar, c5_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3_ar, c7_ar, c5_ar from T where c3_ar is null and c7_ar = 456 and c5_ar = 'aby' order by c3_ar desc, c7_ar desc, c5_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c3_ar is null and T.c7_ar = 456 and T.c5_ar = 'aby') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {(null),456,aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c4_ar, c2_ar, c9_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4_ar, c2_ar, c9_ar from T where c4_ar <= 'あえう' and c2_ar < 'あえう' and c9_ar is null order by c4_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c4_ar <= 'あえう' and T.c2_ar < 'あえう'
                    and T.c9_ar is null) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c9_ar, c6_ar, c1_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9_ar, c6_ar, c1_ar from T where c9_ar is not null and c6_ar like 'ab%' and c1_ar = 'aby' order by c9_ar asc, c1_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and data:#xx like data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {1.414213E0,abx,aby }
SydTest::Executor: [INFO] {3.141592E0,aby,aby }
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c2_ar, c6_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2_ar, c6_ar, c4_ar from T where c2_ar > 'あえう' and c6_ar is not null and c4_ar < 'あえう' order by c2_ar desc, c6_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                T.c2_ar > 'あえう' to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
                   xx:do until line xx unless (check data:#xx is not null
                            and check data:#xx < data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c8_ar, c4_ar, c7_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8_ar, c4_ar, c7_ar from T where c8_ar is null and c4_ar like 'あ%う' and c7_ar = 123 order by c8_ar desc, c4_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c8_ar is null and T.c4_ar like 'あ%う'
                    and T.c7_ar = 123) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),あいう,123}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c1_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c1_ar, c4_ar from T where c1_ar is not null order by c1_ar desc, c4_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless check data:#xx is not null
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {ja,aby ,あえう}
SydTest::Executor: [INFO] {(null),aby ,あいう}
SydTest::Executor: [INFO] {ja,aby ,あいう}
SydTest::Executor: [INFO] {zh,aby ,あいう}
SydTest::Executor: [INFO] {zh,aby ,あいう}
SydTest::Executor: [INFO] {(null),aby ,(null)}
SydTest::Executor: [INFO] {ja,abx ,あえう}
SydTest::Executor: [INFO] {ja,abx ,あえう}
SydTest::Executor: [INFO] {(null),abx ,あいう}
SydTest::Executor: [INFO] {(null),abx ,(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c1_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c1_ar, c4_ar from T
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.BTR_I to data:{#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
SydTest::Executor: [INFO] {(null),(null),(null)}
SydTest::Executor: [INFO] {(null),(null),あいう}
SydTest::Executor: [INFO] {(null),(null),あえう}
SydTest::Executor: [INFO] {(null),abx ,(null)}
SydTest::Executor: [INFO] {(null),abx ,あいう}
SydTest::Executor: [INFO] {(null),aby ,(null)}
SydTest::Executor: [INFO] {(null),aby ,あいう}
SydTest::Executor: [INFO] {ja,(null),(null)}
SydTest::Executor: [INFO] {ja,(null),あえう}
SydTest::Executor: [INFO] {ja,abx ,あえう}
SydTest::Executor: [INFO] {ja,abx ,あえう}
SydTest::Executor: [INFO] {ja,aby ,あいう}
SydTest::Executor: [INFO] {ja,aby ,あえう}
SydTest::Executor: [INFO] {zh,(null),あえう}
SydTest::Executor: [INFO] {zh,(null),あえう}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,abx ,(null)}
SydTest::Executor: [INFO] {zh,aby ,あいう}
SydTest::Executor: [INFO] {zh,aby ,あいう}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c5_ar, c4_ar, c7_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5_ar, c4_ar, c7_ar from T where c5_ar is null and c4_ar is null and c7_ar >= 456 order by c4_ar desc, c7_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c5_ar is null and T.c4_ar is null
                    and T.c7_ar >= 456) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),(null),456}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c7_ar, c2_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7_ar, c2_ar, c4_ar from T where c7_ar is null and c2_ar is null and c4_ar = 'あえう' order by c7_ar asc, c2_ar desc, c4_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c7_ar is null and T.c2_ar is null
                    and T.c4_ar = 'あえう') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {(null),(null),あえう}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c1_ar, c5_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1_ar, c5_ar, c4_ar from T where c1_ar is null and c5_ar is null and c4_ar is null order by c1_ar asc, c5_ar desc, c4_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c1_ar is null and T.c5_ar is null
                    and T.c4_ar is null) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c1_ar, c8_ar, c9_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1_ar, c8_ar, c9_ar from T where c1_ar < 'aby' and c8_ar = 123456789 order by c1_ar asc, c9_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c1_ar < 'aby' and T.c8_ar = 123456789) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {abx ,123456789,3.141592E0}
SydTest::Executor: [INFO] {abx ,123456789,1.414213E0}
SydTest::Executor: [INFO] {abx ,123456789,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c1_ar, c5_ar, c3_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1_ar, c5_ar, c3_ar from T where c1_ar like 'ab%' and c3_ar like 'ab%' order by c1_ar asc, c5_ar asc, c3_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,2,1):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c1_ar like 'ab%' and T.c3_ar like 'ab%') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {abx ,(null),abx}
SydTest::Executor: [INFO] {abx ,(null),aby}
SydTest::Executor: [INFO] {abx ,abx,abx}
SydTest::Executor: [INFO] {abx ,abx,aby}
SydTest::Executor: [INFO] {abx ,abx,aby}
SydTest::Executor: [INFO] {abx ,aby,abx}
SydTest::Executor: [INFO] {aby ,abx,abx}
SydTest::Executor: [INFO] {aby ,abx,aby}
SydTest::Executor: [INFO] {aby ,aby,aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c9_ar, c8_ar, c2_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9_ar, c8_ar, c2_ar from T where c9_ar is null and c8_ar > 847865165 and c2_ar = 'あいう' order by c9_ar asc, c2_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c9_ar is null and T.c8_ar > 847865165
                    and T.c2_ar = 'あいう') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c2_ar, c4_ar, c9_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2_ar, c4_ar, c9_ar from T where c2_ar = 'あいう' and c4_ar like 'あ%う' and c9_ar is null order by c4_ar asc, c9_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c2_ar = 'あいう' and T.c4_ar like 'あ%う'
                    and T.c9_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c3_ar, c4_ar, c7_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3_ar, c4_ar, c7_ar from T where c3_ar < 'aby' and c4_ar like 'あ%う' and c7_ar = 456 order by c3_ar asc, c7_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c3_ar < 'aby' and T.c4_ar like 'あ%う'
                    and T.c7_ar = 456) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {abx,あいう,456}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c1_ar, c12_ar, c6_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1_ar, c12_ar, c6_ar from T where c1_ar is not null and c12_ar = 1 and c6_ar <= 'aby' order by c1_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx is not null
                            and check data:#xx <= data:#xx)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {abx ,1,abx}
SydTest::Executor: [INFO] {abx ,1,aby}
SydTest::Executor: [INFO] {abx ,1,aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c7_ar, c2_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c7_ar, c2_ar from T where c11_ar is null and c7_ar is null and c2_ar < 'あいう' order by c11_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c11_ar is null and T.c7_ar is null
                    and T.c2_ar < 'あいう') to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c1_ar, c7_ar, c11_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1_ar, c7_ar, c11_ar from T where c1_ar is null and c7_ar > 123 and c11_ar = 'ja' order by c1_ar desc, c7_ar asc, c11_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c1_ar is null and T.c7_ar > 123 and T.c11_ar = 'ja') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c10_ar, c1_ar, c9_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10_ar, c1_ar, c9_ar from T where c10_ar = '2007-01-01 12:34:56.789' and c1_ar >= 'abx' and c9_ar = 3.141592 order by c1_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10_ar = 2007-01-01 12:34:56.789
                    and T.c1_ar >= 'abx' and T.c9_ar = 3.141592E0) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {2007-01-01 12:34:56.789,aby ,3.141592E0}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c6_ar, c1_ar, c10_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6_ar, c1_ar, c10_ar from T where c6_ar is null and c1_ar = 'aby' and c10_ar = '2007-02-01 12:34:56.789' order by c1_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6_ar is null and T.c1_ar = 'aby'
                    and T.c10_ar = 2007-02-01 12:34:56.789) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {(null),aby ,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] {(null),aby ,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c10_ar, c4_ar, c3_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10_ar, c4_ar, c3_ar from T where c10_ar = '2007-02-01 12:34:56.789' and c4_ar is null order by c4_ar asc, c3_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10_ar = 2007-02-01 12:34:56.789
                    and T.c4_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {2007-02-01 12:34:56.789,(null),aby}
SydTest::Executor: [INFO] {2007-02-01 12:34:56.789,(null),(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c5_ar, c8_ar, c12_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5_ar, c8_ar, c12_ar from T where c5_ar is null and c8_ar = 847865165 and c12_ar is null order by c5_ar asc, c8_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c5_ar is null and T.c8_ar = 847865165
                    and T.c12_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c5_ar, c1_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5_ar, c1_ar, c4_ar from T where c5_ar like 'ab%' and c1_ar like 'ab%' and c4_ar is null order by c1_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c5_ar like 'ab%' and T.c1_ar like 'ab%'
                    and T.c4_ar is null) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {abx,abx ,(null)}
SydTest::Executor: [INFO] {aby,abx ,(null)}
SydTest::Executor: [INFO] {aby,abx ,(null)}
SydTest::Executor: [INFO] {abx,aby ,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c6_ar, c1_ar, c11_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6_ar, c1_ar, c11_ar from T where c6_ar is null and c1_ar = 'aby' and c11_ar = 'zh' order by c1_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6_ar is null and T.c1_ar = 'aby'
                    and T.c11_ar = 'zh') to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {(null),aby ,zh}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c7_ar, c2_ar, c3_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7_ar, c2_ar, c3_ar from T where c7_ar is null and c3_ar is null order by c7_ar asc, c2_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c7_ar is null and T.c3_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),あえう ,(null)}
SydTest::Executor: [INFO] {(null),あえう ,(null)}
SydTest::Executor: [INFO] {(null),(null),(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c4_ar, c8_ar, c3_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c4_ar, c8_ar, c3_ar from T where c4_ar = 'あいう' and c8_ar = 847865165 and c3_ar < 'abx' order by c4_ar desc, c8_ar desc, c3_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c4_ar = 'あいう' and T.c8_ar = 847865165
                    and T.c3_ar < 'abx') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c5_ar, c4_ar, c6_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5_ar, c4_ar, c6_ar from T where c4_ar = 'あえう' and c6_ar <= 'aby' order by c5_ar desc, c4_ar desc, c6_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(2 desc,0 desc,1):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx <= data:#xx)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {aby,あえう,abx}
SydTest::Executor: [INFO] {abx,あえう,abx}
SydTest::Executor: [INFO] {abx,あえう,abx}
SydTest::Executor: [INFO] {abx,あえう,aby}
SydTest::Executor: [INFO] {(null),あえう,aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c10_ar, c5_ar, c6_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10_ar, c5_ar, c6_ar from T where c5_ar like 'ab%' and c6_ar like 'ab%' order by c5_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (data:#xx like data:#xx
                            and data:#xx like data:#xx)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {(null),aby,aby}
SydTest::Executor: [INFO] {2007-01-01 12:34:56.789,aby,abx}
SydTest::Executor: [INFO] {2007-01-01 12:34:56.789,aby,aby}
SydTest::Executor: [INFO] {2007-02-01 12:34:56.789,aby,abx}
SydTest::Executor: [INFO] {(null),abx,abx}
SydTest::Executor: [INFO] {(null),abx,aby}
SydTest::Executor: [INFO] {2007-01-01 12:34:56.789,abx,abx}
SydTest::Executor: [INFO] {2007-02-01 12:34:56.789,abx,abx}
SydTest::Executor: [INFO] {2007-02-01 12:34:56.789,abx,aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c10_ar, c9_ar, c11_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10_ar, c9_ar, c11_ar from T where c10_ar is null and c9_ar = 1.414213 and c11_ar is null order by c9_ar asc, c11_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10_ar is null and T.c9_ar = 1.414213E0
                    and T.c11_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c12_ar, c4_ar, c10_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12_ar, c4_ar, c10_ar from T where c12_ar > 1 and c4_ar like 'あ%う' and c10_ar = '2007-02-01 12:34:56.789' order by c4_ar asc, c10_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c12_ar > 1 and T.c4_ar like 'あ%う'
                    and T.c10_ar = 2007-02-01 12:34:56.789) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c3_ar, c9_ar, c10_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3_ar, c9_ar, c10_ar from T where c3_ar is null and c9_ar = 3.141592 and c10_ar is not null order by c9_ar asc, c10_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                T.c3_ar is null to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),3.141592E0,2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c6_ar, c10_ar, c7_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6_ar, c10_ar, c7_ar from T where c6_ar like 'ab%' and c10_ar = '2007-01-01 12:34:56.789' and c7_ar is null order by c6_ar desc, c10_ar desc, c7_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6_ar like 'ab%' and T.c10_ar = 2007-01-01 12:34:56.789
                    and T.c7_ar is null) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {abx,2007-01-01 12:34:56.789,(null)}
SydTest::Executor: [INFO] {abx,2007-01-01 12:34:56.789,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c12_ar, c5_ar, c7_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12_ar, c5_ar, c7_ar from T where c12_ar = 1 and c5_ar like 'ab%' and c7_ar = 456 order by c12_ar asc, c5_ar desc, c7_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c12_ar = 1 and T.c5_ar like 'ab%'
                    and T.c7_ar = 456) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {1,abx,456}
SydTest::Executor: [INFO] {1,abx,456}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c6_ar, c12_ar, c2_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6_ar, c12_ar, c2_ar from T where c6_ar is null and c12_ar <= -1 and c2_ar < 'あいう' order by c6_ar desc, c12_ar asc, c2_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6_ar is null and T.c12_ar <= -1
                    and T.c2_ar < 'あいう') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c6_ar, c3_ar, c12_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c6_ar, c3_ar, c12_ar from T where c6_ar like 'ab%' and c3_ar like 'ab%' and c12_ar <= 1 order by c6_ar desc, c12_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c6_ar like 'ab%' and T.c3_ar like 'ab%'
                    and T.c12_ar <= 1) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {aby,aby,-1}
SydTest::Executor: [INFO] {aby,abx,1}
SydTest::Executor: [INFO] {aby,aby,1}
SydTest::Executor: [INFO] {aby,aby,1}
SydTest::Executor: [INFO] {abx,abx,-1}
SydTest::Executor: [INFO] {abx,abx,-1}
SydTest::Executor: [INFO] {abx,abx,-1}
SydTest::Executor: [INFO] {abx,aby,1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c9_ar, c6_ar, c5_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9_ar, c6_ar, c5_ar from T where c6_ar = 'abx' and c5_ar = 'abx' order by c9_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx = data:#xx)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {(null),abx,abx}
SydTest::Executor: [INFO] {(null),abx,abx}
SydTest::Executor: [INFO] {3.141592E0,abx,abx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c3_ar, c5_ar, c6_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3_ar, c5_ar, c6_ar from T where c3_ar is not null and c6_ar = 'aby' order by c3_ar asc, c5_ar desc, c6_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,2 desc,1):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {abx,abx,aby}
SydTest::Executor: [INFO] {aby,aby,aby}
SydTest::Executor: [INFO] {aby,abx,aby}
SydTest::Executor: [INFO] {aby,(null),aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c2_ar, c3_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2_ar, c3_ar, c4_ar from T where c2_ar >= 'あいう' and c3_ar is null and c4_ar like 'あ%う' order by c2_ar asc, c4_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c2_ar >= 'あいう' and T.c3_ar is null
                    and T.c4_ar like 'あ%う') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {あいう ,(null),あいう}
SydTest::Executor: [INFO] {あえう ,(null),あえう}
SydTest::Executor: [INFO] {あえう ,(null),あえう}
SydTest::Executor: [INFO] {あえう ,(null),あいう}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c2_ar, c5_ar, c6_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2_ar, c5_ar, c6_ar from T where c2_ar = 'あいう' and c5_ar >= 'abx' and c6_ar < 'abx' order by c2_ar desc, c6_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c2_ar = 'あいう' and T.c5_ar >= 'abx'
                    and T.c6_ar < 'abx') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c3_ar, c11_ar, c10_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c3_ar, c11_ar, c10_ar from T where c3_ar = 'aby' and c11_ar is null and c10_ar = '2007-02-01 12:34:56.789' order by c3_ar asc, c10_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c3_ar = 'aby' and T.c11_ar is null
                    and T.c10_ar = 2007-02-01 12:34:56.789) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {aby,(null),2007-02-01 12:34:56.789}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c9_ar, c11_ar, c7_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c9_ar, c11_ar, c7_ar from T where c9_ar < 1.414213 and c11_ar = 'zh' and c7_ar is null order by c9_ar asc, c11_ar desc, c7_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c9_ar < 1.414213E0 and T.c11_ar = 'zh'
                    and T.c7_ar is null) to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c12_ar, c9_ar, c5_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12_ar, c9_ar, c5_ar from T where c12_ar < -1 and c9_ar is null order by c12_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c12_ar < -1 and T.c9_ar is null) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c1_ar, c12_ar, c4_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c1_ar, c12_ar, c4_ar from T where c1_ar = 'abx' and c12_ar = -1 and c4_ar is null order by c1_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c1_ar = 'abx' and T.c12_ar = -1 and T.c4_ar is null) to data:{#xx}
            execute:
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {abx ,-1,(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c8_ar, c11_ar, c7_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8_ar, c11_ar, c7_ar from T where c8_ar = 123456789 and c11_ar = 'zh' and c7_ar = 456 order by c8_ar asc, c7_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c8_ar = 123456789 and T.c11_ar = 'zh'
                    and T.c7_ar = 456) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {123456789,zh,456}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c8_ar, c3_ar, c5_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8_ar, c3_ar, c5_ar from T where c3_ar = 'aby' and c5_ar = 'aby'
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.BTR_I to data:{#xx,#xx,#xx}
    execute:
           xx:do until line xx unless (check data:#xx = data:#xx
                    and check data:#xx = data:#xx)
           xx:continue
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),aby,aby}
SydTest::Executor: [INFO] {123456789,aby,aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c6_ar, c12_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c6_ar, c12_ar from T where c6_ar = 'abx' and c12_ar is not null order by c11_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc):#xx <- data:{#xx,#xx} -> data:{#xx,#xx}
    <-- sequential scan on T.BTR_I to data:{#xx,#xx,#xx,#xx}
            execute:
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx}
SydTest::Executor: [INFO] {zh,abx,1}
SydTest::Executor: [INFO] {ja,abx,-1}
SydTest::Executor: [INFO] {ja,abx,-1}
SydTest::Executor: [INFO] {(null),abx,-1}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c2_ar, c4_ar, c1_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c2_ar, c4_ar, c1_ar from T where c2_ar like 'あ%う' and c4_ar <= 'あえう' and c1_ar = 'aby' order by c2_ar desc, c4_ar desc, c1_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0 desc,1 desc,2):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c2_ar like 'あ%う' and T.c4_ar <= 'あえう'
                    and T.c1_ar = 'aby') to data:{#xx,#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c10_ar, c8_ar, c3_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c10_ar, c8_ar, c3_ar from T where c10_ar is null and c8_ar is null and c3_ar is null order by c10_ar asc, c8_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c10_ar is null and T.c8_ar is null
                    and T.c3_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {(null),(null),(null)}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c11_ar, c7_ar, c3_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c11_ar, c7_ar, c3_ar from T where c11_ar = 'ja' and c7_ar = 123 and c3_ar is not null order by c11_ar asc, c7_ar desc, c3_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc,2 desc):#xx <- data:{#xx,#xx,#xx,#xx} -> data:{#xx,#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                T.c11_ar = 'ja' to data:{#xx}
            execute:
                   xx:file fetch on VCT_T_$$Conversion
                        by data:#xx to data:{#xx}
                   xx:file fetch on RCD_T by data:#xx to data:{#xx,#xx,#xx}
                   xx:do until line xx unless (check data:#xx = data:#xx
                            and check data:#xx is not null)
                   xx:continue
         to data:{#xx,#xx,#xx,#xx}
    execute:
SydTest::Executor: [INFO] {ja,123,abx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c8_ar, c4_ar, c9_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c8_ar, c4_ar, c9_ar from T where c8_ar = 123456789 and c4_ar = 'あえう' and c9_ar = 1.414213 order by c8_ar asc, c4_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c8_ar = 123456789 and T.c4_ar = 'あえう'
                    and T.c9_ar = 1.414213E0) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {123456789,あえう,1.414213E0}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c5_ar, c4_ar, c11_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c5_ar, c4_ar, c11_ar from T where c5_ar is null and c4_ar = 'あえう' and c11_ar is null order by c4_ar asc, c11_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c5_ar is null and T.c4_ar = 'あえう'
                    and T.c11_ar is null) to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c7_ar, c4_ar, c11_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:xxxx
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c7_ar, c4_ar, c11_ar from T where c7_ar is null and c4_ar < 'あえう' and c11_ar <> 'zh' order by c7_ar asc, c4_ar asc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c7_ar is null and T.c4_ar < 'あえう'
                    and T.c11_ar != 'zh') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] create all rows index I on T(c12_ar, c1_ar, c6_ar)
Opt::Generator: [DEBUG] Result Plan[0]:
sequential scan on T.RCD_T to data:{#xx,#xx,#xx,#xx}
    execute:
           xx:insert BTR_I by data:{#xx,#xx,#xx,#xx,#xx}
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] select c12_ar, c1_ar, c6_ar from T where c12_ar < 1 and c1_ar < 'aby' and c6_ar = 'aby' order by c12_ar asc, c1_ar desc
Opt::Generator: [DEBUG] Result Plan[0]:
filter by sort(0,1 desc):#xx <- data:{#xx,#xx,#xx} -> data:{#xx,#xx,#xx}
    <-- index scan on T.BTR_I for
                (T.c12_ar < 1 and T.c1_ar < 'aby' and T.c6_ar = 'aby') to data:{#xx,#xx,#xx}
            execute:
         to data:{#xx,#xx,#xx}
    execute:
           xx:file fetch on VCT_T_$$Conversion by data:#xx to data:{#xx}
           xx:file fetch on RCD_T by data:#xx to data:{#xx}
SydTest::Executor: [INFO] {-1,abx ,aby}
SydTest::Executor: [INFO] End Of Data.
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop index I
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop table T
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] TerminateSession
SydTest::Executor: [INFO] Session Terminate : 0
SydTest::Executor: [INFO] [Main] InitializeSession
SydTest::Executor: [INFO] [SydTest Option] TESTDB
SydTest::Executor: [INFO] Session Initialize : 0
SydTest::Executor: [INFO] [Main] Command
SydTest::Executor: [INFO] [[SQL Query]] drop database TESTDB
SydTest::Executor: [INFO] Success.
SydTest::Executor: [INFO] [Main] TerminateSession
SydTest::Executor: [INFO] Session Terminate : 0
SydTest::Executor: [INFO] [Main] Terminate
SydTest::Executor: [INFO] Main End.
